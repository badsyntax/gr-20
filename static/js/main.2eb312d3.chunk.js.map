{"version":3,"sources":["components/ButtonControl/ButtonControl.module.scss","components/DropdownGroup/DropdownGroup.module.scss","components/IndexPage/IndexPage.module.scss","components/MapControls/MapControls.module.scss","components/App/App.module.scss","components/BackgroundImage/BackgroundImage.module.scss","components/MapPage/MapPage.module.scss","components/Map/Map.module.scss","components/Popup/Popup.module.scss","components/AboutPage/AboutPage.module.scss","components/NotFoundPage/NotFoundPage.module.scss","components/AboutPage/AboutPage.tsx","components/BackgroundImage/BackgroundImage.tsx","components/IndexPage/cover.jpg","components/IndexPage/IndexPage.tsx","util/util.ts","features/spinner.ts","components/GpxLayer/GpxSource.tsx","components/GpxLayer/styles.ts","components/GpxLayer/GpxLayer.tsx","util/pdf.ts","util/download.ts","components/ButtonControl/ButtonControl.tsx","components/Form/Form.tsx","components/ControlButtons/DownloadButtonControl/DownloadButtonControl.tsx","components/ControlButtons/MyLocationButtonControl/baseline-my_location-24px-yellow.svg","components/ControlButtons/MyLocationButtonControl/MyLocationButtonControl.tsx","components/ControlButtons/PdfExportButtonControl/PdfExportButtonControl.tsx","components/ControlButtons/ZoomToExtentButtonControl/ZoomToExtentButtonControl.tsx","components/MapControls/controls.ts","components/MapControls/MapControls.tsx","components/Popup/CloseButtonControl.tsx","components/Popup/360-24px.svg","components/Popup/Google360ButtonControl.tsx","components/Popup/NextPoint.tsx","components/Popup/NextPointButtonControl.tsx","components/Popup/PrevPointButtonControl.tsx","components/Popup/ZoomInButtonControl.tsx","components/Popup/PopupContent.tsx","components/Popup/Popup.tsx","components/Popup/constants.ts","components/StartEndLayer/baseline-location_on-24px-yellow.svg","components/StartEndLayer/StartEndLayer.tsx","components/TileLayer/TileLayer.tsx","components/Map/Map.tsx","data/routes/corcega-gr20-calenzana-conca.gpx","data/routes/gr-20-corcega-track-completo.gpx","data/routes/routes.ts","data/routes/gr20-2018-complete-northsouth.gpx","data/routes/gr20.gpx","features/settings.ts","components/Dropdown/Dropdown.tsx","components/DropdownGroup/DropdownGroup.tsx","components/Settings/settingsOptions.ts","components/Settings/Settings.tsx","components/Spinner/Spinner.tsx","components/MapPage/MapPage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/App/App.tsx","reportWebVitals.ts","store/rootReducer.ts","store/index.ts","index.tsx"],"names":["module","exports","c","classNames","bind","STYLES","AboutPage","useState","isOpen","setIsOpen","className","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","title","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","active","href","BackgroundImage","imageUrl","children","opacity","rest","style","backgroundImage","IndexPage","cover","position","top","left","src","alt","role","IndexPage__main","IndexPage__heading","IndexPage__summary","MULTI_LINE_STRING","GeometryType","POINT","getElevation","coordinate","Math","round","getDataFromCoords","coords","lonLat","toLonLat","hdms","toStringHDMS","getHDMS","elevation","getMultiCoordsFromNextFeature","feature","nextFeature","gpxVectorLayer","multiLine","getMultiLineStringFeature","getSource","getFeatures","Error","multiLineCoords","getGeometry","getCoordinates","featureIndex","getFeatureIndexInMultiLine","nextFeatureIndex","multiCoords","data","reduce","accumulator","currentValue","i","length","nextValue","distance","LineString","getLength","currentElevation","elevationGainDown","abs","elevationGainUp","distanceInKm","toFixed","getDataFromMultiCoords","slice","features","find","getType","getPointFeatures","filter","closestPointInMultiLine","getClosestPoint","findIndex","coord","getSortedPointFeatures","vectorSource","points","map","point","featurePoint","index","sort","a","b","SpinnerSlice","createSlice","name","initialState","isVisible","reducers","showSpinner","state","hideSpinner","actions","spinnerReducer","reducer","GpxSource","memo","gpxUrl","vectorLayer","onReady","dispatch","useDispatch","useEffect","format","GPX","readExtensions","extensionsNode","Array","from","getElementsByTagName","forEach","node","getAttribute","text","textContent","setProperties","source","VectorSource","url","setSource","once","getState","STATE","READY","dispose","styles","Point","Style","image","Circle","fill","Fill","stroke","Stroke","width","radius","MultiLineString","VectorLayer","set","setStyle","type","toString","GpxLayer","onSourceReady","showMarkers","showRoute","gpxMarkers","setGpxMarkers","multiLineStringFeature","setMultiLineStringFeature","toggleMarkers","useCallback","show","markerPoint","addFeature","removeFeature","toggleRoute","addLayer","PDFDims","a0","a1","a2","a3","a4","a5","exportMapToPDF","pdf","resolution","reset","extent","onBeforeRender","context","Promise","resolve","JSPDF","default","undefined","dim","size","getSize","defaultExtent","getView","calculateExtent","height","printSize","viewResolution","getResolution","mapCanvas","document","createElement","mapContext","getContext","prototype","call","querySelectorAll","canvas","parentNode","globalAlpha","Number","matrix","transform","match","split","CanvasRenderingContext2D","setTransform","apply","drawImage","toDataURL","addImage","setSize","fit","setResolution","addPDFTextToCanvas","font","fillStyle","shadowColor","shadowBlur","lineWidth","fillText","getProperties","getMultiStagePDF","stageFeatures","onLoadStart","onLoadEnd","boundingExtent","addPage","getCurrentViewPDF","PDF_OPTION_ALL","PDF_OPTION_CURRENT","addGPXToZip","zip","gpxFileUrl","getUrl","fetch","gpxFileResponse","gpxText","fileName","pop","file","addPDFToZip","option","sortedPointsFeatures","finalPDF","output","downloadZipFile","includeGPX","includePDF","pdfFormat","pdfResolution","pdfOption","Zip","initialExtent","zipFileName","rootZipDir","folder","generateAsync","content","saveAs","ButtonControl","buttonClassName","tooltip","tooltipPlacement","tooltipOpen","setTooltipOpen","buttonRef","useRef","current","addEventListener","removeEventListener","ButtonControl__container","ref","Tooltip","placement","target","toggle","delay","hide","modifiers","offset","INPUT_TYPES","DownloadButtonControl","modalOpen","setModalOpen","downloadOptions","setDownloadOptions","onFieldChange","checked","targetValue","value","onChange","download","Modal","centered","ModalHeader","ModalBody","FormGroup","check","Label","Input","paddingLeft","row","for","sm","Col","id","Alert","Button","disabled","LAYER_ID","FEATURE_ID","MyLocationButtonControl","useMemo","_feature","Feature","setId","Icon","anchor","marker","_vectorLayer","removeLayer","onGetCurrentPosition","fromLonLat","longitude","latitude","getFeatureById","setGeometry","animate","center","duration","navigator","getLayers","getArray","layer","get","getLayerById","geolocation","getCurrentPosition","alert","PdfExportButtonControl","onButtonCLick","save","ZoomToExtentButtonControl","zoomControl","Zoom","attributionControl","Attribution","collapsible","scaleLineControl","ScaleLine","units","minWidth","controls","MapControls","zoomContainerRef","createRef","setTarget","control","addControl","removeControl","buttonProps","CloseButtonControl","props","ButtonControl__close","_extends","Object","assign","arguments","key","hasOwnProperty","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","Svg36024Px","_ref","svgRef","titleId","viewBox","ForwardRef","Google360ButtonControl","pointName","embedUrl","maxWidth","frameBorder","border","allowFullScreen","NextPoint","NextPointButtonControl","PrevPointButtonControl","ZoomInButtonControl","zoom","PopupContent","scheduleUpdate","onClose","prevFeature","coordinates","selectFeature","google360Url","lon","lat","PopoverHeader","verticalAlign","PopoverBody","paddingTop","Popup","containerRef","overlayRef","Overlay","element","positioning","OverlayPositioning","CENTER_CENTER","addOverlay","setPosition","Popover","container","enabled","preventOverflow","flip","createPointTextFeature","Text","offsetY","pointTextStyle","START_POINT_ID","FINISH_POINT_ID","StartEndLayer","startEndVectorLayer","setVisible","onGpxVectorLayerStateChange","gpxVectorSource","multiLineStringGeometry","startFeature","yellowMarker","getFirstCoordinate","endFeature","getLastCoordinate","startEndSource","setZIndex","un","urls","maps","expandUrl","flat","TileLayer","xyzSource","rasterLayer","OSM","Tile","mapUrl","setUrl","URL","origin","rel","Component","pointSelectEvents","MapBrowserEventType","POINTERDOWN","isGpxWayPoint","getId","Map","mapRef","React","isPopupOpen","setIsPopupOpen","selectedFeature","setSelectedFeature","sortedPointFeatures","setSortedPointFeatures","useSelector","settings","showControls","OLMap","pixelRatio","sortedPointIndex","getNextFeature","getPrevFeature","onPopupClose","onMapPointerMove","evt","originalEvent","nodeName","toLowerCase","pixel","getEventPixel","forEachFeatureAtPixel","push","pointFeature","getTarget","cursor","onMapClick","getFeaturesAtPixel","hitTolerance","preventDefault","lng","view","View","setView","on","eventType","onGpxSourceReady","sortedFeatures","routes","route5","samplingDistance","route4","showElevationProfile","SettingsSlice","updateSettings","action","payload","settingsReducer","Dropdown","ButtonDropdown","onMouseEnter","onMouseLeave","DropdownGroup","options","values","onInputChange","ButtonToolbar","ButtonGroup","dropdownLabel","label","dropdownName","items","DropdownToggle","caret","DropDown","DropdownMenu","right","inputName","DropdownItem","event","stopPropagation","display","Settings","TopBarProgress","config","barColors","0","barThickness","Spinner","spinner","body","MapPage","NotFoundPage","App","basename","process","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","e","console","error","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2eb312d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonControl\":\"ButtonControl_ButtonControl__1kGFl\",\"ButtonControl__container\":\"ButtonControl_ButtonControl__container__11PIr\",\"ButtonControl__close\":\"ButtonControl_ButtonControl__close__3OChW\",\"ButtonControl__close-button\":\"ButtonControl_ButtonControl__close-button__2TRZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropdownGroup\":\"DropdownGroup_DropdownGroup__14KIR\",\"DropdownGroup__form-item\":\"DropdownGroup_DropdownGroup__form-item__1A4nj\",\"DropdownGroup__form-group\":\"DropdownGroup_DropdownGroup__form-group__3_0Qe\",\"DropdownGroup__form-label\":\"DropdownGroup_DropdownGroup__form-label__1bwaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IndexPage__background-image\":\"IndexPage_IndexPage__background-image__8Mq0N\",\"IndexPage__main\":\"IndexPage_IndexPage__main__1KiXR\",\"IndexPage__heading\":\"IndexPage_IndexPage__heading__2nkqo\",\"IndexPage__summary\":\"IndexPage_IndexPage__summary__3EYxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MapControls\":\"MapControls_MapControls__sDdcj\",\"MapControls__button-control\":\"MapControls_MapControls__button-control__1zU34\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2mBMi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackgroundImage\":\"BackgroundImage_BackgroundImage__3Y_TA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MapPage\":\"MapPage_MapPage__2ScJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Map\":\"Map_Map__3R7Yv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Popup\":\"Popup_Popup__26Fqg\",\"Popup__button-control\":\"Popup_Popup__button-control__12RRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutPage\":\"AboutPage_AboutPage__b9WnT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFoundPage\":\"NotFoundPage_NotFoundPage__3Ouc4\"};","import classNames from 'classnames/bind';\nimport React, { Fragment, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\nimport STYLES from './AboutPage.module.scss';\n\nconst c = classNames.bind(STYLES);\n\nexport const AboutPage: React.FunctionComponent = () => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <Fragment>\n      <Helmet>\n        <title>GR-20 - About</title>\n      </Helmet>\n      <div className={c('AboutPage')}>\n        <Navbar color=\"dark\" dark expand=\"sm\">\n          <div className=\"container\">\n            <NavbarBrand tag={Link} to=\"/\" title=\"Home\">\n              GR-20\n            </NavbarBrand>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/map/\">\n                    Routes\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/kit/\">\n                    Kit\n                  </NavLink>\n                </NavItem>\n                <NavItem active>\n                  <NavLink tag={Link} to=\"/about/\">\n                    About\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n        <div className=\"container\">\n          <div className=\"mt-3\">\n            <h1>About this GR-20 site</h1>\n          </div>\n          <p className=\"lead\">\n            This is a hobby fan site made for the GR-20 route in Corsica,\n            France. The intention is to provide useful resources to help{' '}\n            <a href=\"https://github.com/badsyntax\">me</a> and you plan and\n            explore the route/s and island.\n          </p>\n          <div className=\"mt-3\">\n            <h2>Goals</h2>\n          </div>\n          <p>\n            Here are some high-level goals I'd like to achieve with this site,\n            in no particular order:\n          </p>\n          <ul>\n            <li>\n              0 maintenance overhead - I want to be able to step away from this\n              project at any point.\n              <ul>\n                <li>\n                  No reliance on any custom server-side tech for runtime. Purely\n                  front-end application that calls remote API's.\n                </li>\n                <li>\n                  No fees to pay (hosted on a free service, like GitHub pages)\n                </li>\n              </ul>\n            </li>\n            <li>\n              Use and share open data. Not-for profit. Open-source. All for\n              passion of the route.\n            </li>\n            <li>\n              Collaborative effort.\n              <ul>\n                <li>\n                  I need help with the GPS data. I would like to have GPX routes\n                  for the variants and other routes on the island. I plan to\n                  record more data when I do the route again in June 2019 but if\n                  anyone wants to submit their GPS data it would super useful!\n                </li>\n                <li>\n                  If you'd like to contribute, you can so via GitHub. Just{' '}\n                  <a href=\"https://github.com/badsyntax/gr-20/issues\">\n                    create an issue{' '}\n                  </a>{' '}\n                  to get a conversation going. If you don't have an account\n                  you'll need to sign-up but it's free.\n                </li>\n              </ul>\n            </li>\n          </ul>\n          <div className=\"mt-3\">\n            <h2>Tech used</h2>\n          </div>\n          <ul>\n            <li>OpenLayers V5</li>\n            <li>OpenStreetMap</li>\n            <li>React</li>\n            <li>Bootstrap</li>\n          </ul>\n          <div className=\"mt-3\">\n            <h2>Other Resources</h2>\n            <ul>\n              <li>\n                <a href=\"http://corsica.forhikers.com/forum/gr-20\">\n                  http://corsica.forhikers.com/forum/gr-20\n                </a>\n              </li>\n              <li>\n                <a href=\"https://gr20corsica.wordpress.com/about/\">\n                  https://gr20corsica.wordpress.com/about/\n                </a>\n              </li>\n              <li>\n                <a href=\"http://www.le-gr20.fr/en/\">\n                  http://www.le-gr20.fr/en/\n                </a>\n              </li>\n              <li>\n                <a href=\"https://www.cicerone.co.uk/the-gr20-corsica\">\n                  https://www.cicerone.co.uk/the-gr20-corsica\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport STYLES from './BackgroundImage.module.scss';\n\nexport interface BackgroundImageProps {\n  imageUrl: string;\n  opacity?: number;\n  className?: string;\n}\n\nexport const BackgroundImage: React.FunctionComponent<BackgroundImageProps> = ({\n  imageUrl,\n  children,\n  className,\n  opacity = 0.25,\n  ...rest\n}) => {\n  return (\n    <div\n      className={classNames(STYLES.BackgroundImage, className)}\n      style={{\n        backgroundImage: `linear-gradient(\n        rgba(0, 0, 0, ${opacity}),\n        rgba(0, 0, 0, ${opacity})\n      ), url(\"${imageUrl}\")`,\n      }}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/cover.1720f202.jpg\";","import React, { Fragment } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { IoMdArrowRoundForward } from 'react-icons/io';\nimport { Link } from 'react-router-dom';\nimport { BackgroundImage } from '../BackgroundImage/BackgroundImage';\nimport cover from './cover.jpg';\nimport STYLES from './IndexPage.module.scss';\n\nexport const IndexPage: React.FunctionComponent = () => (\n  <Fragment>\n    <Helmet>\n      <title>GR-20</title>\n    </Helmet>\n    <BackgroundImage\n      imageUrl={cover}\n      className={STYLES['IndexPage__background-image']}\n    >\n      <a href=\"https://github.com/badsyntax/gr-20\">\n        <img\n          style={{ position: 'absolute', top: 0, left: 0 }}\n          src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png\"\n          alt=\"Fork me on GitHub\"\n        />\n      </a>\n      <main role=\"main\" className={STYLES.IndexPage__main}>\n        <h1 className={STYLES.IndexPage__heading}>GR-20</h1>\n        <p className={STYLES.IndexPage__summary}>\n          The GR 20 is a GR footpath that crosses the Mediterranean island of\n          Corsica running approximately north-south, described by the outdoor\n          writer Paddy Dillon as \"one of the top trails in the world\".\n        </p>\n        <p>\n          <Link to=\"/map/\" className=\"btn btn-lg btn-primary\">\n            View Routes <IoMdArrowRoundForward />\n          </Link>\n          {'  '}\n          <Link to=\"/kit/\" className=\"btn btn-lg btn-primary\">\n            View Kit <IoMdArrowRoundForward />\n          </Link>\n          {'  '}\n          <Link to=\"/about/\" className=\"btn btn-lg btn-primary\">\n            About <IoMdArrowRoundForward />\n          </Link>\n        </p>\n      </main>\n    </BackgroundImage>\n  </Fragment>\n);\n","import { Coordinate, toStringHDMS } from 'ol/coordinate';\nimport Feature from 'ol/Feature';\nimport Geometry from 'ol/geom/Geometry';\nimport GeometryType from 'ol/geom/GeometryType';\nimport LineString from 'ol/geom/LineString';\nimport MultiLineString from 'ol/geom/MultiLineString';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport Map from 'ol/Map';\nimport { toLonLat } from 'ol/proj';\nimport VectorSource from 'ol/source/Vector';\n\nconst { MULTI_LINE_STRING, POINT } = GeometryType;\n\nexport const getHDMS = (coordinate: Coordinate): string => {\n  const lonLat = toLonLat(coordinate);\n  const hdms = toStringHDMS(lonLat);\n  return hdms;\n};\n\nexport const getElevation = (coordinate: Coordinate): number => {\n  const elevation = Math.round(coordinate[2]);\n  return elevation;\n};\n\nexport interface DataMultiCoords {\n  distance: number;\n  elevationGainUp: number;\n  elevationGainDown: number;\n  distanceInKm: string;\n}\n\nexport const getDataFromMultiCoords = (\n  multiCoords: Coordinate[]\n): DataMultiCoords => {\n  const data = multiCoords.reduce<DataMultiCoords>(\n    (accumulator, currentValue, i) => {\n      if (i === multiCoords.length - 1) {\n        return accumulator;\n      }\n      const nextValue = multiCoords[i + 1];\n\n      accumulator.distance += new LineString([\n        currentValue,\n        nextValue,\n      ]).getLength();\n\n      const currentElevation = getElevation(currentValue);\n      const nextElevation = getElevation(nextValue);\n      const elevation = nextElevation - currentElevation;\n\n      if (elevation < 0) {\n        accumulator.elevationGainDown += Math.abs(elevation);\n      } else {\n        accumulator.elevationGainUp += elevation;\n      }\n\n      return accumulator;\n    },\n    {\n      distance: 0,\n      elevationGainUp: 0,\n      elevationGainDown: 0,\n      distanceInKm: '',\n    }\n  );\n  data.distanceInKm = (data.distance / 1000).toFixed(2);\n  return data;\n};\n\ninterface DataCoords {\n  lonLat: Coordinate;\n  hdms: string;\n  elevation: number;\n}\n\nexport const getDataFromCoords = (coords: Coordinate): DataCoords => {\n  const lonLat = toLonLat(coords);\n  const hdms = getHDMS(coords);\n  const elevation = getElevation(coords);\n  return { lonLat, hdms, elevation };\n};\n\nexport const getNextFeature = (\n  feature: Feature<Point>,\n  // gpxVectorLayer: VectorLayer,\n  sortedPointFeatures: Feature<Point>[]\n): Feature<Point> => {\n  const sortedPointIndex = sortedPointFeatures.indexOf(feature);\n  const nextPoint = sortedPointFeatures[sortedPointIndex + 1];\n  return nextPoint;\n};\n\nexport const getPrevFeature = (\n  feature: Feature<Point>,\n  sortedPointFeatures: Feature<Point>[]\n): Feature<Point> => {\n  const sortedPointIndex = sortedPointFeatures.indexOf(feature);\n  const nextPoint = sortedPointFeatures[sortedPointIndex - 1];\n  return nextPoint;\n};\n\nexport const getMultiCoordsFromNextFeature = (\n  feature: Feature<Point>,\n  nextFeature: Feature<Point>,\n  gpxVectorLayer: VectorLayer\n): DataMultiCoords => {\n  const multiLine = getMultiLineStringFeature(\n    gpxVectorLayer.getSource().getFeatures()\n  );\n  if (!multiLine) {\n    throw new Error('unable to find multiLine feature in gpx vector layer');\n  }\n  const multiLineCoords = multiLine.getGeometry().getCoordinates()[0];\n  const featureIndex = getFeatureIndexInMultiLine(feature, multiLine);\n  const nextFeatureIndex = getFeatureIndexInMultiLine(nextFeature, multiLine);\n  const multiCoords = multiLineCoords.slice(featureIndex, nextFeatureIndex);\n  return getDataFromMultiCoords(multiCoords);\n};\n\nexport const getLayerById = <T>(map: Map, id: string): T | undefined =>\n  (map\n    .getLayers()\n    .getArray()\n    .find((layer) => layer.get('id') === id) as unknown) as T;\n\nexport const getMultiLineStringFeature = (\n  features: Feature<Geometry>[]\n): Feature<MultiLineString> | undefined => {\n  return features.find(\n    (feature) => feature.getGeometry().getType() === MULTI_LINE_STRING\n  ) as Feature<MultiLineString>;\n};\n\nexport const getPointFeatures = (\n  features: Feature<Geometry>[]\n): Feature<Point>[] =>\n  features.filter(\n    (feature) => feature.getGeometry().getType() === POINT\n  ) as Feature<Point>[];\n\nexport interface SortedPointFeature {\n  featurePoint: Feature<Point>;\n  closestPointInMultiLine: Coordinate;\n  index: number;\n}\n\nexport const getFeatureIndexInMultiLine = (\n  feature: Feature<Point>,\n  multiLine: Feature<MultiLineString>\n): number => {\n  const multiLineCoords = multiLine.getGeometry().getCoordinates()[0];\n  const closestPointInMultiLine = multiLine\n    .getGeometry()\n    .getClosestPoint(feature.getGeometry().getCoordinates());\n  const margin = 50; // meters\n  const closesPointIndex = multiLineCoords.findIndex(\n    (coord) =>\n      new LineString([coord, closestPointInMultiLine]).getLength() < margin\n  );\n  return closesPointIndex;\n};\n\nexport const getSortedPointFeatures = (\n  vectorSource: VectorSource\n): Feature<Point>[] => {\n  const points = getPointFeatures(vectorSource.getFeatures());\n  const multiLine = getMultiLineStringFeature(vectorSource.getFeatures());\n  if (!multiLine) {\n    throw new Error(\n      'getSortedPointFeatures: unable to find multiLine feature in gpx vector layer'\n    );\n  }\n  const pointsInMultiLine = points.map((point) => {\n    const featureIndex = getFeatureIndexInMultiLine(point, multiLine);\n    return {\n      featurePoint: point,\n      index: featureIndex,\n    };\n  });\n\n  const sortedPointsInMultiline = pointsInMultiLine.sort(\n    (a, b) => a.index - b.index\n  );\n  return sortedPointsInMultiline.map(({ featurePoint }) => featurePoint);\n};\n\nexport const sampleCoordinates = (\n  coords: Coordinate[],\n  minDistanceThreshold = 0\n): {\n  coord: Coordinate;\n  distance: number;\n  distanceFromStart: number;\n}[] => {\n  let curMinDistance = 0;\n  let distanceFromStart = 0;\n  return coords\n    .map((coord, i) => {\n      const distance =\n        i === 0 ? 0 : new LineString([coords[i - 1], coord]).getLength(); // meter\n      distanceFromStart += distance;\n      return {\n        coord,\n        distance,\n        distanceFromStart,\n      };\n    })\n    .filter((point, i) => {\n      curMinDistance += point.distance;\n      if (!i || curMinDistance > minDistanceThreshold) {\n        curMinDistance = 0;\n        return true;\n      }\n      return false;\n    });\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport interface SpinnerState {\n  isVisible: boolean;\n}\n\nconst initialState: SpinnerState = {\n  isVisible: false,\n};\n\nconst SpinnerSlice = createSlice({\n  name: 'Spinner',\n  initialState,\n  reducers: {\n    showSpinner: (state): void => {\n      state.isVisible = true;\n    },\n    hideSpinner: (state): void => {\n      state.isVisible = false;\n    },\n  },\n});\n\nexport const { showSpinner, hideSpinner } = SpinnerSlice.actions;\n\nexport const { reducer: spinnerReducer } = SpinnerSlice;\n","import GPX from 'ol/format/GPX';\nimport VectorLayer from 'ol/layer/Vector';\nimport STATE from 'ol/source/State';\nimport VectorSource from 'ol/source/Vector';\nimport { memo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { hideSpinner, showSpinner } from '../../features/spinner';\n\nconst EXTENSIONS_TAG_NAME = 'gr20';\n\nexport interface GpxSourceProps {\n  gpxUrl: string;\n  vectorLayer: VectorLayer;\n  onReady: (vectorSource: VectorSource) => void;\n}\n\nexport const GpxSource: React.FunctionComponent<GpxSourceProps> = memo(\n  ({ gpxUrl, vectorLayer, onReady }) => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      dispatch(showSpinner());\n      const format = new GPX({\n        readExtensions(feature, extensionsNode) {\n          if (!extensionsNode) {\n            return;\n          }\n          const gr20Nodes = [\n            ...Array.from(\n              (extensionsNode as Element).getElementsByTagName(\n                EXTENSIONS_TAG_NAME\n              )\n            ),\n          ];\n          gr20Nodes.forEach((node) => {\n            const name = node.getAttribute('name');\n            if (name) {\n              const text = node.textContent;\n              feature.setProperties({\n                [name]: text,\n              });\n            }\n          });\n        },\n      });\n      const source = new VectorSource({\n        url: gpxUrl,\n        format,\n      });\n      vectorLayer.setSource(source);\n      source.once('change', () => {\n        if (source.getState() === STATE.READY) {\n          dispatch(hideSpinner());\n          onReady(source);\n        }\n      });\n\n      return () => {\n        source.dispose();\n      };\n    }, [dispatch, gpxUrl, onReady, vectorLayer]);\n    return null;\n  }\n);\n","import Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\n\nexport interface Styles {\n  [key: string]: Style;\n}\n\nexport const styles: Styles = {\n  Point: new Style({\n    image: new Circle({\n      fill: new Fill({\n        color: 'rgb(255,255,0,1)',\n      }),\n      stroke: new Stroke({ color: 'rgba(0,60,136)', width: 1 }),\n      radius: 5,\n    }),\n  }),\n  MultiLineString: new Style({\n    stroke: new Stroke({\n      color: 'rgba(0,60,136)',\n      width: 4,\n    }),\n  }),\n};\n","import Feature from 'ol/Feature';\nimport Geometry from 'ol/geom/Geometry';\nimport MultiLineString from 'ol/geom/MultiLineString';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport React, {\n  Fragment,\n  memo,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { getMultiLineStringFeature, getPointFeatures } from '../../util/util';\nimport { GpxSource } from './GpxSource';\nimport { styles } from './styles';\n\nconst vectorLayer = new VectorLayer();\nvectorLayer.set('id', 'gpx-vector-layer');\nvectorLayer.setStyle((feature) => {\n  const type = feature.getGeometry().getType().toString();\n  return styles[type];\n});\n\nexport interface GpxLayerProps {\n  map: Map;\n  gpxUrl: string;\n  showMarkers: boolean;\n  showRoute: boolean;\n  onSourceReady: (vectorSource: VectorSource) => void;\n  children: (\n    gpxVectorLayer: VectorLayer,\n    multiLineStringFeature?: Feature<MultiLineString>\n  ) => ReactNode;\n}\n\nexport const GpxLayer: React.FunctionComponent<GpxLayerProps> = memo(\n  ({ map, onSourceReady, gpxUrl, showMarkers, showRoute, children }) => {\n    const [gpxMarkers, setGpxMarkers] = useState<Feature<Geometry>[]>([]);\n    const [multiLineStringFeature, setMultiLineStringFeature] = useState<\n      Feature<MultiLineString>\n    >();\n\n    const toggleMarkers = useCallback(\n      (show: boolean) => {\n        const source = vectorLayer.getSource();\n        if (show) {\n          if (!getPointFeatures(source.getFeatures()).length) {\n            gpxMarkers.forEach((markerPoint) => {\n              source.addFeature(markerPoint);\n            });\n          }\n        } else {\n          gpxMarkers.forEach((markerPoint) =>\n            source.removeFeature(markerPoint)\n          );\n        }\n      },\n      [gpxMarkers]\n    );\n\n    const toggleRoute = useCallback(\n      (show: boolean) => {\n        if (!multiLineStringFeature) {\n          return;\n        }\n        if (show) {\n          const source = vectorLayer.getSource();\n          if (!getMultiLineStringFeature(source.getFeatures())) {\n            vectorLayer.getSource().addFeature(multiLineStringFeature);\n          }\n        } else {\n          vectorLayer.getSource().removeFeature(multiLineStringFeature);\n        }\n      },\n      [multiLineStringFeature]\n    );\n\n    const onReady = useCallback(\n      (vectorSource: VectorSource) => {\n        onSourceReady(vectorSource);\n        const features = vectorSource.getFeatures();\n        setGpxMarkers(getPointFeatures(features));\n        setMultiLineStringFeature(getMultiLineStringFeature(features));\n      },\n      [onSourceReady]\n    );\n\n    useEffect(() => {\n      map.addLayer(vectorLayer);\n    }, [map]);\n\n    useEffect(() => {\n      toggleMarkers(showMarkers);\n    }, [showMarkers, toggleMarkers]);\n\n    useEffect(() => {\n      toggleRoute(showRoute);\n    }, [showRoute, toggleRoute]);\n\n    return (\n      <Fragment>\n        <GpxSource\n          gpxUrl={gpxUrl}\n          vectorLayer={vectorLayer}\n          onReady={onReady}\n        />\n        {children && children(vectorLayer)}\n      </Fragment>\n    );\n  }\n);\n","// import jsPDF from 'jspdf/types/index';\nimport { boundingExtent, Extent } from 'ol/extent';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport SimpleGeometry from 'ol/geom/SimpleGeometry';\nimport Map from 'ol/Map';\nimport { Size } from 'ol/size';\n\nexport const PDFDims = {\n  a0: [1189, 841],\n  a1: [841, 594],\n  a2: [594, 420],\n  a3: [420, 297],\n  a4: [297, 210],\n  a5: [210, 148],\n};\n\nexport type PDFFormat = 'a0' | 'a1' | 'a2' | 'a3' | 'a4' | 'a5';\n\nexport const exportMapToPDF = async (\n  map: Map,\n  pdf?: unknown,\n  format: PDFFormat = 'a4',\n  resolution = 150,\n  reset = true,\n  extent: SimpleGeometry | Extent | null = null,\n  onBeforeRender = (context: HTMLCanvasElement) => undefined\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Promise<any> =>\n  new Promise(async (resolve) => {\n    if (!pdf) {\n      const { default: JSPDF } = await import(\n        /* webpackChunkName: \"jspdf\" */ 'jspdf'\n      );\n      // eslint-disable-next-line no-param-reassign\n      pdf = new JSPDF('landscape', undefined, format);\n    }\n    const dim = PDFDims[format];\n    const size = map.getSize();\n    const defaultExtent = map.getView().calculateExtent(size);\n    const width = Math.round((dim[0] * resolution) / 25.4);\n    const height = Math.round((dim[1] * resolution) / 25.4);\n    const printSize: Size = [width, height];\n    const viewResolution = map.getView().getResolution();\n\n    map.once('rendercomplete', () => {\n      const mapCanvas = document.createElement('canvas');\n      mapCanvas.width = width;\n      mapCanvas.height = height;\n      const mapContext = mapCanvas.getContext('2d');\n      if (mapContext) {\n        Array.prototype.forEach.call(\n          document.querySelectorAll('.ol-layer canvas'),\n          function (canvas) {\n            if (canvas.width > 0) {\n              const opacity = canvas.parentNode.style.opacity;\n              mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n              const transform = canvas.style.transform;\n              // Get the transform parameters from the style's transform matrix\n              const matrix = transform\n                .match(/^matrix\\(([^(]*)\\)$/)[1]\n                .split(',')\n                .map(Number);\n              // Apply the transform to the export map context\n              CanvasRenderingContext2D.prototype.setTransform.apply(\n                mapContext,\n                matrix\n              );\n              mapContext.drawImage(canvas, 0, 0);\n            }\n          }\n        );\n        onBeforeRender(mapCanvas);\n        const data = mapCanvas.toDataURL('image/jpeg');\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (pdf as any)?.addImage(data, 'JPEG', 0, 0, dim[0], dim[1]);\n      }\n      if (reset) {\n        map.setSize(size);\n        map.getView().fit(extent || defaultExtent, { size });\n        map.getView().setResolution(viewResolution);\n      }\n      resolve(pdf);\n    });\n\n    map.setSize(printSize);\n    map.getView().fit(extent || defaultExtent, { size: printSize });\n  });\n\nexport const addPDFTextToCanvas = (\n  canvas: HTMLCanvasElement,\n  feature: Feature<Point>,\n  nextFeature: Feature<Point>\n): void => {\n  const context = canvas.getContext('2d');\n  if (!context) {\n    return;\n  }\n\n  context.font = '16px Arial';\n\n  context.fillStyle = 'black';\n  context.shadowColor = 'black';\n  context.shadowBlur = 7;\n  context.lineWidth = 5;\n\n  context.fillText(\n    '© OpenStreetMap contributors © koenverhoeven on Wikiloc ',\n    6,\n    canvas.height - 4\n  );\n\n  context.shadowBlur = 0;\n  context.fillStyle = 'white';\n  context.fillText(\n    '© OpenStreetMap contributors © koenverhoeven on Wikiloc ',\n    5,\n    canvas.height - 5\n  );\n\n  context.shadowBlur = 0;\n  context.fillStyle = 'white';\n  context.fillText(\n    `${feature.getProperties().name} to ${nextFeature.getProperties().name}`,\n    5,\n    20\n  );\n};\n\nexport const getMultiStagePDF = async (\n  map: Map,\n  format: PDFFormat,\n  resolution: number,\n  stageFeatures: Feature<Point>[],\n  onLoadStart: () => void,\n  onLoadEnd: () => void\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Promise<any | undefined> => {\n  const features = stageFeatures.slice(0, -1);\n  onLoadStart();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let pdf: any | undefined = undefined;\n  for (let i = 0; i < features.length; i++) {\n    const extent = boundingExtent([\n      stageFeatures[i].getGeometry().getCoordinates(),\n      stageFeatures[i + 1].getGeometry().getCoordinates(),\n    ]);\n\n    pdf = await exportMapToPDF(\n      map,\n      pdf,\n      format,\n      resolution,\n      false,\n      extent,\n      (canvas) => {\n        addPDFTextToCanvas(canvas, stageFeatures[i], stageFeatures[i + 1]);\n        return undefined;\n      }\n    );\n    if (i < stageFeatures.length - 2) {\n      pdf.addPage();\n    }\n  }\n  onLoadEnd();\n  return pdf;\n};\n\nexport const getCurrentViewPDF = async (\n  map: Map,\n  format: PDFFormat,\n  resolution: number,\n  onLoadStart: () => void,\n  onLoadEnd: () => void\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Promise<any> => {\n  onLoadStart();\n  const size = map.getSize();\n  const extent = map.getView().calculateExtent(size);\n  const pdf = await exportMapToPDF(\n    map,\n    undefined,\n    format,\n    resolution,\n    false,\n    extent\n  );\n  onLoadEnd();\n  return pdf;\n};\n","import { saveAs } from 'file-saver';\nimport type JSZip from 'jszip/index.d';\nimport Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport { getCurrentViewPDF, getMultiStagePDF, PDFFormat } from './pdf';\nimport { getSortedPointFeatures } from './util';\n\nexport const PDF_OPTION_ALL = 'all';\nexport const PDF_OPTION_CURRENT = 'current';\n\nexport const addGPXToZip = async (\n  source: VectorSource,\n  zip: JSZip\n): Promise<void> => {\n  const gpxFileUrl = source.getUrl();\n  if (typeof gpxFileUrl === 'string') {\n    const gpxFileResponse = await fetch(gpxFileUrl);\n    const gpxText = await gpxFileResponse.text();\n    const fileName = gpxFileUrl.split('/').pop();\n    if (fileName) {\n      zip.file(fileName, gpxText);\n    }\n  }\n};\n\nexport const addPDFToZip = async (\n  map: Map,\n  vectorSource: VectorSource,\n  zip: JSZip,\n  onLoadStart: () => void,\n  onLoadEnd: () => void,\n  fileName = 'map.pdf',\n  format: PDFFormat = 'a4',\n  resolution = 150,\n  option = PDF_OPTION_ALL\n): Promise<void> => {\n  const sortedPointsFeatures = getSortedPointFeatures(vectorSource);\n\n  const finalPDF =\n    option === PDF_OPTION_ALL\n      ? await getMultiStagePDF(\n          map,\n          format,\n          resolution,\n          sortedPointsFeatures,\n          onLoadStart,\n          onLoadEnd\n        )\n      : await getCurrentViewPDF(\n          map,\n          format,\n          resolution,\n          onLoadStart,\n          onLoadEnd\n        );\n\n  if (finalPDF) {\n    zip.file(fileName, finalPDF.output('blob'));\n  }\n};\n\nexport const downloadZipFile = async (\n  map: Map,\n  source: VectorSource,\n  includeGPX: boolean,\n  includePDF: boolean,\n  pdfFormat: PDFFormat,\n  pdfResolution: number,\n  pdfOption: string,\n  onLoadStart: () => void,\n  onLoadEnd: () => void\n): Promise<void> => {\n  onLoadStart();\n\n  const { default: Zip } = await import(\n    /* webpackChunkName: \"jszip\" */ 'jszip'\n  );\n\n  const size = map.getSize();\n  const initialExtent = map.getView().calculateExtent(size);\n  const gpxFileUrl = source.getUrl();\n  if (typeof gpxFileUrl !== 'string') {\n    return;\n  }\n  const zipFileName = gpxFileUrl.split('/').pop();\n  if (!zipFileName) {\n    return;\n  }\n  const zip = new Zip();\n  const rootZipDir = zip.folder(zipFileName);\n\n  if (includeGPX && rootZipDir) {\n    await addGPXToZip(source, rootZipDir);\n  }\n  if (includePDF && rootZipDir) {\n    await addPDFToZip(\n      map,\n      source,\n      rootZipDir,\n      onLoadStart,\n      onLoadEnd,\n      'foo.pdf',\n      pdfFormat,\n      pdfResolution,\n      pdfOption\n    );\n  }\n\n  const content = await zip.generateAsync({ type: 'blob' });\n  saveAs(content, `${zipFileName}.zip`);\n  map.setSize(size);\n  map.getView().fit(initialExtent, { size });\n  onLoadEnd();\n};\n","import classNames from 'classnames/bind';\nimport * as Popper from 'popper.js';\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport { Tooltip } from 'reactstrap';\nimport STYLES from './ButtonControl.module.scss';\n\nconst c = classNames.bind(STYLES);\n\nexport interface ButtonControlProps {\n  onClick: () => void;\n  className?: string;\n  buttonClassName?: string;\n  tooltip?: string;\n  tooltipPlacement?: Popper.Placement;\n}\n\nexport const ButtonControl: React.FunctionComponent<ButtonControlProps> = memo(\n  ({\n    children,\n    onClick,\n    className,\n    buttonClassName,\n    tooltip,\n    tooltipPlacement = 'bottom',\n    ...rest\n  }) => {\n    const [tooltipOpen, setTooltipOpen] = useState<boolean>(false);\n    const buttonRef = useRef<HTMLButtonElement>(null);\n\n    useEffect(() => {\n      buttonRef?.current?.addEventListener('click', onClick);\n      const current = buttonRef?.current;\n      return () => {\n        current?.removeEventListener('click', onClick);\n      };\n    });\n\n    const toggleTooltip = () => {\n      setTooltipOpen(!tooltipOpen);\n    };\n\n    return (\n      <div className={c(STYLES.ButtonControl__container, className)}>\n        <button\n          className={c(STYLES.ButtonControl, buttonClassName)}\n          type=\"button\"\n          ref={buttonRef}\n          {...rest}\n        >\n          {children}\n        </button>\n        {tooltip && buttonRef.current && (\n          <Tooltip\n            placement={tooltipPlacement}\n            isOpen={tooltipOpen}\n            target={buttonRef.current}\n            toggle={toggleTooltip}\n            delay={{ show: 0, hide: 0 }}\n            modifiers={{\n              offset: {\n                offset: '0,5',\n              },\n            }}\n          >\n            {tooltip}\n          </Tooltip>\n        )}\n      </div>\n    );\n  }\n);\n","import React, { ChangeEvent } from 'react';\nimport { Form as ReactStrapForm } from 'reactstrap';\n\nexport const INPUT_TYPES = {\n  checkbox: 'checkbox',\n};\n\nexport interface FormProps {\n  onChange: (name: string, value: string | boolean) => void;\n}\n\nexport const Form: React.FunctionComponent<FormProps> = ({\n  onChange,\n  children,\n}) => {\n  const onInputChange = (event: ChangeEvent<HTMLFormElement>) => {\n    const { name, type, checked, value: targetValue } = event.target;\n    const value = type === INPUT_TYPES.checkbox ? checked : targetValue;\n    onChange(name, value);\n  };\n\n  return <ReactStrapForm onChange={onInputChange}>{children}</ReactStrapForm>;\n};\n\nexport default Form;\n","import Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport React, { Fragment, useState } from 'react';\nimport { IoMdDownload } from 'react-icons/io';\nimport { useDispatch } from 'react-redux';\nimport {\n  Alert,\n  Button,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n} from 'reactstrap';\nimport { hideSpinner, showSpinner } from '../../../features/spinner';\nimport {\n  downloadZipFile,\n  PDF_OPTION_ALL,\n  PDF_OPTION_CURRENT,\n} from '../../../util/download';\nimport { PDFFormat } from '../../../util/pdf';\nimport {\n  ButtonControl,\n  ButtonControlProps,\n} from '../../ButtonControl/ButtonControl';\nimport { INPUT_TYPES } from '../../Form/Form';\n\nexport interface DownloadButtonControlProps {\n  map: Map;\n  source: VectorSource;\n}\n\nexport interface DownloadOptions {\n  includeGPX: boolean;\n  includePDF: boolean;\n  pdfOption: 'all' | 'current';\n  pdfFormat: PDFFormat;\n  pdfResolution: number;\n}\n\nexport const DownloadButtonControl: React.FunctionComponent<\n  DownloadButtonControlProps & Omit<ButtonControlProps, 'onClick'>\n> = ({ map, source, ...rest }) => {\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n  const [downloadOptions, setDownloadOptions] = useState<DownloadOptions>({\n    includeGPX: true,\n    includePDF: true,\n    pdfOption: 'all',\n    pdfFormat: 'a4',\n    pdfResolution: 150,\n  });\n\n  const dispatch = useDispatch();\n\n  const onButtonCLick = () => {\n    setModalOpen(true);\n  };\n\n  const onChange = (name: string, value: string | boolean) => {\n    setDownloadOptions({\n      ...downloadOptions,\n      [name]: value,\n    });\n  };\n\n  const onFieldChange = ({ target }: { target: HTMLInputElement }) => {\n    const { name, type, checked, value: targetValue } = target;\n    const value = type === INPUT_TYPES.checkbox ? checked : targetValue;\n    onChange(name, value);\n  };\n\n  const download = async () => {\n    const {\n      pdfFormat,\n      pdfResolution,\n      includePDF,\n      includeGPX,\n      pdfOption,\n    } = downloadOptions;\n    await downloadZipFile(\n      map,\n      source,\n      includeGPX,\n      includePDF,\n      pdfFormat,\n      pdfResolution,\n      pdfOption,\n      () => dispatch(showSpinner()),\n      () => dispatch(hideSpinner())\n    );\n  };\n\n  const onDownloadButtonClick = () => {\n    setModalOpen(false);\n    void download(); // FIXME: handle error\n  };\n\n  const toggle = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  return (\n    <Fragment>\n      <ButtonControl {...rest} onClick={onButtonCLick} tooltipPlacement=\"right\">\n        <IoMdDownload />\n      </ButtonControl>\n      <Modal isOpen={modalOpen} toggle={toggle} centered>\n        <ModalHeader toggle={toggle}>Download Options</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    name=\"includeGPX\"\n                    checked={downloadOptions.includeGPX}\n                    onChange={onFieldChange}\n                  />{' '}\n                  Include GPX\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    name=\"includePDF\"\n                    checked={downloadOptions.includePDF}\n                    onChange={onFieldChange}\n                  />{' '}\n                  Include PDF\n                </Label>\n              </FormGroup>\n              {downloadOptions.includePDF && (\n                <FormGroup style={{ paddingLeft: '1.5em' }}>\n                  <FormGroup row>\n                    <Label for=\"pdfFormat\" sm={4}>\n                      Page size\n                    </Label>\n                    <Col sm={8}>\n                      <Input\n                        type=\"select\"\n                        id=\"pdfFormat\"\n                        onChange={onFieldChange}\n                        name=\"pdfFormat\"\n                        value={downloadOptions.pdfFormat}\n                      >\n                        <option value=\"a0\">A0 (slow)</option>\n                        <option value=\"a1\">A1</option>\n                        <option value=\"a2\">A2</option>\n                        <option value=\"a3\">A3</option>\n                        <option value=\"a4\">A4</option>\n                        <option value=\"a5\">A5 (fast)</option>\n                      </Input>\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Label for=\"pdfFormat\" sm={4}>\n                      Resolution\n                    </Label>\n                    <Col sm={8}>\n                      <Input\n                        type=\"select\"\n                        id=\"pdfResolution\"\n                        onChange={onFieldChange}\n                        name=\"pdfResolution\"\n                        value={downloadOptions.pdfResolution}\n                      >\n                        <option value=\"72\">72 dpi (fast)</option>\n                        <option value=\"150\">150 dpi</option>\n                        <option value=\"300\">300 dpi (slow)</option>\n                      </Input>\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Label sm={4}>Pages</Label>\n                    <Col sm={8}>\n                      <FormGroup check>\n                        <Label check>\n                          <Input\n                            type=\"radio\"\n                            name=\"pdfOption\"\n                            value={PDF_OPTION_ALL}\n                            checked={\n                              downloadOptions.pdfOption === PDF_OPTION_ALL\n                            }\n                            onChange={onFieldChange}\n                          />{' '}\n                          All Stages\n                        </Label>\n                      </FormGroup>\n                      <FormGroup check>\n                        <Label check>\n                          <Input\n                            type=\"radio\"\n                            name=\"pdfOption\"\n                            value={PDF_OPTION_CURRENT}\n                            checked={\n                              downloadOptions.pdfOption === PDF_OPTION_CURRENT\n                            }\n                            onChange={onFieldChange}\n                          />{' '}\n                          Current View\n                        </Label>\n                      </FormGroup>\n                    </Col>\n                  </FormGroup>\n                </FormGroup>\n              )}\n            </FormGroup>\n            {downloadOptions.includePDF &&\n              downloadOptions.pdfOption === PDF_OPTION_ALL && (\n                <Alert color=\"warning\">\n                  Please note it might take some time to generate the PDF.\n                </Alert>\n              )}\n\n            <Button\n              onClick={onDownloadButtonClick}\n              disabled={\n                !downloadOptions.includeGPX && !downloadOptions.includePDF\n              }\n            >\n              Download\n            </Button>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </Fragment>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/baseline-my_location-24px-yellow.bf46ab87.svg\";","import Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport Map from 'ol/Map';\nimport { fromLonLat } from 'ol/proj';\nimport VectorSource from 'ol/source/Vector';\nimport Icon from 'ol/style/Icon';\nimport Style from 'ol/style/Style';\nimport React, { useEffect, useMemo } from 'react';\nimport { MdMyLocation } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { hideSpinner, showSpinner } from '../../../features/spinner';\nimport { getLayerById } from '../../../util/util';\nimport {\n  ButtonControl,\n  ButtonControlProps,\n} from '../../ButtonControl/ButtonControl';\nimport marker from './baseline-my_location-24px-yellow.svg';\n\nconst LAYER_ID = 'mylocation_layer';\nconst FEATURE_ID = 'mylocation_feature';\nconst ANIMATION_DURATION = 1000;\n\nexport interface MyLocationButtonControlProps {\n  map: Map;\n}\n\nexport const MyLocationButtonControl: React.FunctionComponent<\n  MyLocationButtonControlProps & Omit<ButtonControlProps, 'onClick'>\n> = ({ map, ...rest }) => {\n  const dispatch = useDispatch();\n\n  const feature = useMemo<Feature>(() => {\n    const _feature = new Feature({\n      name: 'My Location',\n    });\n    _feature.setId(FEATURE_ID);\n    _feature.setStyle(\n      new Style({\n        image: new Icon({\n          anchor: [0.5, 0.5],\n          src: marker,\n        }),\n      })\n    );\n    return _feature;\n  }, []);\n\n  const vectorLayer = useMemo<VectorLayer>(() => {\n    const _vectorLayer = new VectorLayer({\n      source: new VectorSource({\n        features: [feature],\n      }),\n    });\n    _vectorLayer.set('id', LAYER_ID);\n    return _vectorLayer;\n  }, [feature]);\n\n  useEffect(() => {\n    return () => {\n      map.removeLayer(vectorLayer);\n    };\n  }, [feature, vectorLayer, map]);\n\n  const onGetCurrentPosition = (position: Position) => {\n    dispatch(hideSpinner());\n\n    const coords = fromLonLat([\n      position.coords.longitude,\n      position.coords.latitude,\n    ]);\n\n    vectorLayer\n      .getSource()\n      .getFeatureById(FEATURE_ID)\n      .setGeometry(new Point(coords));\n\n    map.getView().animate({\n      center: coords,\n      duration: ANIMATION_DURATION,\n    });\n  };\n\n  const onButtonCLick = () => {\n    if ('geolocation' in navigator) {\n      dispatch(showSpinner());\n      if (!getLayerById(map, LAYER_ID)) {\n        map.addLayer(vectorLayer);\n      }\n      navigator.geolocation.getCurrentPosition(onGetCurrentPosition);\n    } else {\n      // eslint-disable-next-line no-alert\n      alert('Geolocation is not supported in your browser');\n    }\n  };\n\n  return (\n    <ButtonControl tooltipPlacement=\"right\" onClick={onButtonCLick} {...rest}>\n      <MdMyLocation />\n    </ButtonControl>\n  );\n};\n","import Map from 'ol/Map';\nimport React from 'react';\nimport { FaFilePdf } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport { hideSpinner, showSpinner } from '../../../features/spinner';\nimport { exportMapToPDF } from '../../../util/pdf';\nimport {\n  ButtonControl,\n  ButtonControlProps,\n} from '../../ButtonControl/ButtonControl';\n\nexport interface PdfExportButtonControlProps {\n  map: Map;\n}\n\nexport const PdfExportButtonControl: React.FunctionComponent<\n  PdfExportButtonControlProps & Omit<ButtonControlProps, 'onClick'>\n> = ({ map, ...rest }) => {\n  const dispatch = useDispatch();\n\n  const onButtonCLick = async () => {\n    dispatch(showSpinner());\n    const pdf = await exportMapToPDF(map);\n    pdf.save('map.pdf');\n    dispatch(hideSpinner());\n  };\n\n  return (\n    <ButtonControl tooltipPlacement=\"right\" onClick={onButtonCLick} {...rest}>\n      <FaFilePdf />\n    </ButtonControl>\n  );\n};\n","import Map from 'ol/Map';\nimport React from 'react';\nimport { MdZoomOutMap } from 'react-icons/md';\nimport {\n  ButtonControl,\n  ButtonControlProps,\n} from '../../ButtonControl/ButtonControl';\n\nconst ANIMATION_DURATION = 1000;\n\ninterface ZoomToExtentButtonControlProps {\n  map: Map;\n}\n\nexport const ZoomToExtentButtonControl: React.FunctionComponent<\n  ZoomToExtentButtonControlProps & Omit<ButtonControlProps, 'onClick'>\n> = ({ map, ...rest }) => {\n  const onButtonCLick = () => {\n    const view = map.getView();\n    view.fit(\n      [\n        978823.488305482,\n        5121096.608475749,\n        1039463.1111227559,\n        5245134.752643153,\n      ],\n      {\n        duration: ANIMATION_DURATION,\n      }\n    );\n  };\n\n  return (\n    <ButtonControl tooltipPlacement=\"right\" onClick={onButtonCLick} {...rest}>\n      <MdZoomOutMap />\n    </ButtonControl>\n  );\n};\n","import Attribution from 'ol/control/Attribution';\nimport ScaleLine from 'ol/control/ScaleLine';\nimport Zoom from 'ol/control/Zoom';\n\nexport const zoomControl = new Zoom();\n\nexport const attributionControl = new Attribution({\n  collapsible: true,\n});\n\nexport const scaleLineControl = new ScaleLine({\n  units: 'metric',\n  minWidth: 100,\n});\n\nconst controls = [zoomControl, attributionControl, scaleLineControl];\n\nexport default controls;\n","import classNames from 'classnames/bind';\nimport Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport React, { createRef, useEffect } from 'react';\nimport { DownloadButtonControl } from '../ControlButtons/DownloadButtonControl/DownloadButtonControl';\nimport { MyLocationButtonControl } from '../ControlButtons/MyLocationButtonControl/MyLocationButtonControl';\nimport { PdfExportButtonControl } from '../ControlButtons/PdfExportButtonControl/PdfExportButtonControl';\nimport { ZoomToExtentButtonControl } from '../ControlButtons/ZoomToExtentButtonControl/ZoomToExtentButtonControl';\nimport controls, { zoomControl } from './controls';\nimport STYLES from './MapControls.module.scss';\n\nconst c = classNames.bind(STYLES);\n\nexport interface MapControlsProps {\n  map: Map;\n  source: VectorSource;\n}\n\nexport const MapControls: React.FunctionComponent<MapControlsProps> = ({\n  map,\n  source,\n}) => {\n  const zoomContainerRef = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    zoomControl.setTarget(zoomContainerRef.current!);\n    controls.forEach((control) => map.addControl(control));\n    return () => {\n      controls.forEach((control) => map.removeControl(control));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const buttonProps = {\n    map,\n    className: c('MapControls__button-control'),\n  };\n  return (\n    <div className={STYLES.MapControls}>\n      <div ref={zoomContainerRef} />\n      <ZoomToExtentButtonControl tooltip=\"Fit Extent\" {...buttonProps} />\n      {/* <FullScreenButtonControl tooltip=\"Toggle full-screen\" {...buttonProps} /> */}\n      <PdfExportButtonControl tooltip=\"Export to PDF\" {...buttonProps} />\n      <DownloadButtonControl\n        tooltip=\"Download Route and Maps\"\n        source={source}\n        {...buttonProps}\n      />\n      {/* <GetLinkButtonControl tooltip=\"Get Shareable Link\" {...buttonProps} /> */}\n      <MyLocationButtonControl tooltip=\"Show My Location\" {...buttonProps} />\n      {/* <ControlIcon target={rotateNorthButton}>\n          <MdRotateLeft />\n        </ControlIcon> */}\n    </div>\n  );\n};\n","import React, { memo } from 'react';\nimport { FaTimes } from 'react-icons/fa';\nimport {\n  ButtonControl,\n  ButtonControlProps,\n} from '../ButtonControl/ButtonControl';\nimport STYLES from '../ButtonControl/ButtonControl.module.scss';\n\nexport const CloseButtonControl: React.FunctionComponent<Omit<\n  ButtonControlProps,\n  'className' | 'buttonClassName'\n>> = memo((props) => (\n  <ButtonControl\n    className={STYLES.ButtonControl__close}\n    buttonClassName={STYLES['ButtonControl__close-button']}\n    {...props}\n  >\n    <FaTimes />\n  </ButtonControl>\n));\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7C6.48 7 2 9.24 2 12c0 2.24 2.94 4.13 7 4.77V20l4-4-4-4v2.73c-3.15-.56-5-1.9-5-2.73 0-1.06 3.04-3 8-3s8 1.94 8 3c0 .73-1.46 1.89-4 2.53v2.05c3.53-.77 6-2.53 6-4.58 0-2.76-4.48-5-10-5z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n});\n\nfunction Svg36024Px(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    width: \"1.2em\",\n    height: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(Svg36024Px);\nexport default __webpack_public_path__ + \"static/media/360-24px.9a39ff9e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Fragment, useState } from 'react';\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport {\n  ButtonControl,\n  ButtonControlProps,\n} from '../ButtonControl/ButtonControl';\nimport { ReactComponent as Icon360 } from './360-24px.svg';\n\nexport interface Google360ButtonControlProps {\n  pointName: string;\n  embedUrl: string;\n}\n\nexport const Google360ButtonControl: React.FunctionComponent<\n  Google360ButtonControlProps & Omit<ButtonControlProps, 'onClick'>\n> = ({ pointName, embedUrl, ...rest }) => {\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n\n  const toggle = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  return (\n    <Fragment>\n      <ButtonControl {...rest} onClick={toggle}>\n        <Icon360 />\n      </ButtonControl>\n      <Modal\n        isOpen={modalOpen}\n        toggle={toggle}\n        centered\n        style={{ maxWidth: '800px' }}\n      >\n        <ModalHeader toggle={toggle}>{pointName} 360</ModalHeader>\n        <ModalBody>\n          <iframe\n            title=\"Google Maps 360\"\n            src={embedUrl}\n            width=\"100%\"\n            height=\"450\"\n            frameBorder=\"0\"\n            style={{ border: 0 }}\n            allowFullScreen\n          />\n        </ModalBody>\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default Google360ButtonControl;\n","import Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport React, { Fragment, memo } from 'react';\nimport { getMultiCoordsFromNextFeature } from '../../util/util';\n\nexport interface NextPointProps {\n  gpxVectorLayer: VectorLayer;\n  feature: Feature<Point>;\n  nextFeature: Feature<Point>;\n}\n\nexport const NextPoint: React.FunctionComponent<NextPointProps> = memo(\n  ({ feature, nextFeature, gpxVectorLayer }) => {\n    const multiCoords = getMultiCoordsFromNextFeature(\n      feature,\n      nextFeature,\n      gpxVectorLayer\n    );\n    return (\n      <Fragment>\n        <strong>Next Point</strong>\n        <div>Distance: {multiCoords.distanceInKm}km</div>\n        <div>Elevation gain: {multiCoords.elevationGainUp}m</div>\n        <div>Elevation loss: {multiCoords.elevationGainDown}m</div>\n      </Fragment>\n    );\n  }\n);\n","import React, { memo } from 'react';\nimport { FaCaretRight } from 'react-icons/fa';\nimport {\n  ButtonControl,\n  ButtonControlProps,\n} from '../ButtonControl/ButtonControl';\n\nexport const NextPointButtonControl: React.FunctionComponent<ButtonControlProps> = memo(\n  (props) => (\n    <ButtonControl {...props}>\n      <FaCaretRight />\n    </ButtonControl>\n  )\n);\n","import React, { memo } from 'react';\nimport { FaCaretLeft } from 'react-icons/fa';\nimport {\n  ButtonControl,\n  ButtonControlProps,\n} from '../ButtonControl/ButtonControl';\n\nexport const PrevPointButtonControl: React.FunctionComponent<ButtonControlProps> = memo(\n  (props) => (\n    <ButtonControl {...props}>\n      <FaCaretLeft />\n    </ButtonControl>\n  )\n);\n","import { Coordinate } from 'ol/coordinate';\nimport Map from 'ol/Map';\nimport { fromLonLat } from 'ol/proj';\nimport React, { memo } from 'react';\nimport { MdZoomIn } from 'react-icons/md';\nimport {\n  ButtonControl,\n  ButtonControlProps,\n} from '../ButtonControl/ButtonControl';\n\nexport const ANIMATION_DURATION = 800;\n\nexport interface ZoomInButtonControlProps {\n  lonLat: Coordinate;\n  map: Map;\n}\n\nexport const ZoomInButtonControl: React.FunctionComponent<\n  ZoomInButtonControlProps & Omit<ButtonControlProps, 'onClick'>\n> = memo(({ lonLat, map, ...rest }) => {\n  const onClick = () => {\n    map.getView().animate({\n      center: fromLonLat(lonLat),\n      zoom: 18,\n      duration: ANIMATION_DURATION,\n    });\n  };\n  return (\n    <ButtonControl {...rest} onClick={onClick}>\n      <MdZoomIn />\n    </ButtonControl>\n  );\n});\n","import { Coordinate } from 'ol/coordinate';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport Map from 'ol/Map';\nimport React, { Fragment, useEffect } from 'react';\nimport { MdHome } from 'react-icons/md';\nimport { PopoverBody, PopoverHeader } from 'reactstrap';\nimport { getDataFromCoords } from '../../util/util';\nimport { CloseButtonControl } from './CloseButtonControl';\nimport Google360ButtonControl from './Google360ButtonControl';\nimport { NextPoint } from './NextPoint';\nimport { NextPointButtonControl } from './NextPointButtonControl';\nimport { PrevPointButtonControl } from './PrevPointButtonControl';\nimport { ZoomInButtonControl } from './ZoomInButtonControl';\n\nexport interface PopupContentProps {\n  map: Map;\n  scheduleUpdate: () => void;\n  onClose: () => void;\n  selectFeature: (feature: Feature<Point>) => void;\n  gpxVectorLayer: VectorLayer;\n  feature: Feature<Point>;\n  buttonClassName: string;\n  coordinates: Coordinate;\n  prevFeature?: Feature<Point>;\n  nextFeature?: Feature<Point>;\n}\n\nexport const PopupContent: React.FunctionComponent<PopupContentProps> = ({\n  map,\n  scheduleUpdate,\n  onClose,\n  gpxVectorLayer,\n  feature,\n  prevFeature,\n  nextFeature,\n  buttonClassName,\n  coordinates,\n  selectFeature,\n}) => {\n  const { lonLat, hdms, elevation } = getDataFromCoords(coordinates);\n  const { name, google360Url } = feature.getProperties();\n  const lon = (lonLat[0] || 0).toFixed(6);\n  const lat = (lonLat[1] || 0).toFixed(6);\n\n  const onNextPointButtonClick = () => {\n    if (nextFeature) {\n      selectFeature(nextFeature);\n    }\n  };\n\n  const onPrevPointButtonClick = () => {\n    if (prevFeature) {\n      selectFeature(prevFeature);\n    }\n  };\n\n  useEffect(() => {\n    scheduleUpdate();\n  }, [coordinates, scheduleUpdate]);\n  return (\n    <Fragment>\n      <PopoverHeader>\n        <CloseButtonControl onClick={onClose} />\n        <MdHome size={20} style={{ verticalAlign: 'top' }} /> {name}\n      </PopoverHeader>\n      <PopoverBody>\n        <div>Elevation: {elevation}m</div>\n        <div>Longitude: {lon}</div>\n        <div>Latitude: {lat}</div>\n        <div>Coordinates: {hdms}</div>\n        {nextFeature && (\n          <NextPoint\n            gpxVectorLayer={gpxVectorLayer}\n            feature={feature}\n            nextFeature={nextFeature}\n          />\n        )}\n        <div style={{ paddingTop: '0.5rem' }}>\n          <ZoomInButtonControl\n            lonLat={lonLat}\n            map={map}\n            tooltip=\"Zoom to Point\"\n            className={buttonClassName}\n          />\n          {prevFeature && (\n            <PrevPointButtonControl\n              onClick={onPrevPointButtonClick}\n              tooltip=\"Previous Point\"\n              className={buttonClassName}\n            />\n          )}\n          {nextFeature && (\n            <NextPointButtonControl\n              onClick={onNextPointButtonClick}\n              tooltip=\"Next Point\"\n              className={buttonClassName}\n            />\n          )}\n          {google360Url && name && (\n            <Google360ButtonControl\n              tooltip=\"View 360\"\n              pointName={name}\n              embedUrl={google360Url}\n              className={buttonClassName}\n            />\n          )}\n        </div>\n      </PopoverBody>\n    </Fragment>\n  );\n};\n","import classNames from 'classnames/bind';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport Map from 'ol/Map';\nimport Overlay from 'ol/Overlay';\nimport OverlayPositioning from 'ol/OverlayPositioning';\nimport React, { useEffect, useRef } from 'react';\nimport { Popover } from 'reactstrap';\nimport { ANIMATION_DURATION } from './constants';\nimport STYLES from './Popup.module.scss';\nimport { PopupContent } from './PopupContent';\n\nconst c = classNames.bind(STYLES);\n\ninterface PopupProps {\n  map: Map;\n  isOpen: boolean;\n  onClose: () => void;\n  gpxVectorLayer: VectorLayer;\n  feature: Feature<Point>;\n  prevFeature?: Feature<Point>;\n  nextFeature?: Feature<Point>;\n  selectFeature: (feature: Feature<Point>) => void;\n}\n\nexport const Popup: React.FunctionComponent<PopupProps> = ({\n  map,\n  gpxVectorLayer,\n  onClose,\n  isOpen,\n  feature,\n  nextFeature,\n  prevFeature,\n  selectFeature,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const overlayRef = useRef<Overlay>();\n  const coordinates = feature.getGeometry().getCoordinates();\n\n  useEffect(() => {\n    overlayRef.current = new Overlay({\n      element: containerRef.current as HTMLElement,\n      positioning: OverlayPositioning.CENTER_CENTER,\n    });\n    map.addOverlay(overlayRef.current);\n  }, [map]);\n\n  useEffect(() => {\n    overlayRef.current?.setPosition(coordinates);\n    map.getView().animate({\n      center: coordinates,\n      duration: ANIMATION_DURATION,\n    });\n  }, [map, feature, coordinates]);\n\n  return (\n    <div id=\"popover-container\" ref={containerRef}>\n      <Popover\n        placement=\"top\"\n        isOpen={isOpen}\n        target={containerRef}\n        container={containerRef}\n        className={c('Popup')}\n        modifiers={{\n          hide: { enabled: false },\n          preventOverflow: { enabled: false },\n          flip: { enabled: false },\n        }}\n      >\n        {({ scheduleUpdate }) => {\n          return (\n            <PopupContent\n              map={map}\n              onClose={onClose}\n              gpxVectorLayer={gpxVectorLayer}\n              feature={feature}\n              nextFeature={nextFeature}\n              prevFeature={prevFeature}\n              scheduleUpdate={scheduleUpdate}\n              coordinates={coordinates}\n              buttonClassName={c('Popup__button-control')}\n              selectFeature={selectFeature}\n            />\n          );\n        }}\n      </Popover>\n    </div>\n  );\n};\n","export const ANIMATION_DURATION = 800;\n","export default __webpack_public_path__ + \"static/media/baseline-location_on-24px-yellow.1a07b598.svg\";","import { Color } from 'ol/color';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport Map from 'ol/Map';\nimport STATE from 'ol/source/State';\nimport VectorSource from 'ol/source/Vector';\nimport Fill from 'ol/style/Fill';\nimport Icon from 'ol/style/Icon';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\nimport Text from 'ol/style/Text';\nimport React, { memo, useEffect, useRef } from 'react';\nimport { getMultiLineStringFeature } from '../../util/util';\nimport yellowMarker from './baseline-location_on-24px-yellow.svg';\n\nconst pointTextStyle = (text: string, marker: string, color: Color | string) =>\n  new Style({\n    image: new Icon({\n      anchor: [0.5, 1],\n      src: marker,\n    }),\n    text: new Text({\n      text,\n      fill: new Fill({ color }),\n      stroke: new Stroke({ color: '#ffffff', width: 2 }),\n      font: 'bold 13px Arial',\n      offsetY: 12,\n    }),\n  });\n\nconst createPointTextFeature = (\n  name: string,\n  id: string,\n  color: Color | string,\n  marker: string\n) => {\n  const feature = new Feature({\n    name,\n  });\n  feature.setStyle(pointTextStyle(name, marker, color));\n  feature.setId(id);\n  return feature;\n};\n\nexport interface StartEndLayerProps {\n  map: Map;\n  gpxVectorLayer: VectorLayer;\n  gpxUrl: string;\n  showMarkers: boolean;\n}\n\nexport const START_POINT_ID = 'startPoint';\nexport const FINISH_POINT_ID = 'finishPoint';\n\nexport const StartEndLayer: React.FunctionComponent<StartEndLayerProps> = memo(\n  ({ map, gpxVectorLayer, gpxUrl, showMarkers }) => {\n    const startEndVectorLayer = useRef<VectorLayer>();\n\n    const toggleMarkers = (show: boolean) => {\n      startEndVectorLayer.current?.setVisible(show);\n    };\n\n    const onGpxVectorLayerStateChange = () => {\n      const gpxVectorSource = gpxVectorLayer.getSource();\n      if (\n        gpxVectorSource.getState() === STATE.READY &&\n        gpxVectorSource.getFeatures().length\n      ) {\n        const multiLineStringGeometry = getMultiLineStringFeature(\n          gpxVectorSource.getFeatures()\n        )?.getGeometry();\n        if (!multiLineStringGeometry) {\n          return;\n        }\n        const startFeature = createPointTextFeature(\n          'Start',\n          START_POINT_ID,\n          'rgba(0,60,136)',\n          yellowMarker\n        );\n        startFeature.setGeometry(\n          new Point(multiLineStringGeometry.getFirstCoordinate())\n        );\n\n        const endFeature = createPointTextFeature(\n          'Finish',\n          FINISH_POINT_ID,\n          'rgba(0,60,136)',\n          yellowMarker\n        );\n        endFeature.setGeometry(\n          new Point(multiLineStringGeometry.getLastCoordinate())\n        );\n\n        const startEndSource = new VectorSource({\n          features: [startFeature, endFeature],\n        });\n\n        startEndVectorLayer.current?.setSource(startEndSource);\n        toggleMarkers(true);\n      }\n    };\n\n    useEffect(() => {\n      startEndVectorLayer.current = new VectorLayer();\n      startEndVectorLayer.current.setZIndex(2);\n      map.addLayer(startEndVectorLayer.current);\n      return () => {\n        if (startEndVectorLayer.current) {\n          map.removeLayer(startEndVectorLayer.current);\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n      toggleMarkers(false);\n      gpxVectorLayer.once('change', onGpxVectorLayerStateChange);\n      return () => {\n        gpxVectorLayer.un('change', onGpxVectorLayerStateChange);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [gpxUrl]);\n\n    useEffect(() => {\n      toggleMarkers(showMarkers);\n    }, [showMarkers]);\n\n    return null;\n  }\n);\n","import 'core-js/features/array/flat';\nimport Tile from 'ol/layer/Tile';\nimport Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\nimport { expandUrl } from 'ol/tileurlfunction';\nimport React, { Component } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport maps from '../../data/maps/maps.json';\n\nconst urls = maps.map(({ url }) => expandUrl(url)).flat();\n\nexport interface TileLayerProps {\n  map: Map;\n  mapUrl: string;\n}\n\nexport class TileLayer extends Component<TileLayerProps> {\n  private xyzSource: OSM;\n  private rasterLayer: Tile;\n  constructor(props: TileLayerProps) {\n    super(props);\n    this.xyzSource = new OSM();\n    this.rasterLayer = new Tile({\n      source: this.xyzSource,\n    });\n    this.rasterLayer.set('id', 'osmtilelayer');\n  }\n\n  componentDidMount(): void {\n    const { map, mapUrl } = this.props;\n    map.addLayer(this.rasterLayer);\n    this.xyzSource.setUrl(mapUrl);\n  }\n\n  componentDidUpdate(): void {\n    const { mapUrl } = this.props;\n    this.xyzSource.setUrl(mapUrl);\n  }\n\n  componentWillUnmount(): void {\n    const { map } = this.props;\n    map.removeLayer(this.rasterLayer);\n  }\n\n  render(): React.ReactNode {\n    return (\n      <Helmet>\n        {urls.map((url) => (\n          <link key={url} href={new URL(url).origin} rel=\"preconnect\" />\n        ))}\n      </Helmet>\n    );\n  }\n}\n","// import sync from 'ol-hashed';\nimport Feature, { FeatureLike } from 'ol/Feature';\nimport GeometryType from 'ol/geom/GeometryType';\nimport Point from 'ol/geom/Point';\nimport { default as OLMap } from 'ol/Map';\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\nimport MapBrowserEventType from 'ol/MapBrowserEventType';\nimport 'ol/ol.css';\nimport { fromLonLat } from 'ol/proj';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport {\n  getNextFeature,\n  getPrevFeature,\n  getSortedPointFeatures,\n} from '../../util/util';\nimport { GpxLayer } from '../GpxLayer/GpxLayer';\nimport { MapControls } from '../MapControls/MapControls';\nimport { Popup } from '../Popup/Popup';\nimport {\n  FINISH_POINT_ID,\n  StartEndLayer,\n  START_POINT_ID,\n} from '../StartEndLayer/StartEndLayer';\nimport { TileLayer } from '../TileLayer/TileLayer';\nimport STYLES from './Map.module.scss';\n\nconst initialState = {\n  lat: 42.184207,\n  lng: 9.1079,\n  zoom: 9,\n};\n\nconst pointSelectEvents = [MapBrowserEventType.POINTERDOWN];\n\nfunction isGpxWayPoint(feature: FeatureLike) {\n  return (\n    feature.getGeometry().getType() === GeometryType.POINT &&\n    feature.getId() !== START_POINT_ID &&\n    feature.getId() !== FINISH_POINT_ID\n  );\n}\n\nexport const Map: React.FunctionComponent = ({ children }) => {\n  const mapRef = React.createRef<HTMLDivElement>();\n  const [isPopupOpen, setIsPopupOpen] = useState<boolean>(false);\n  const [selectedFeature, setSelectedFeature] = useState<Feature<Point>>();\n  const [sortedPointFeatures, setSortedPointFeatures] = useState<\n    Feature<Point>[]\n  >();\n  const { mapUrl, gpxUrl, showControls, showMarkers, showRoute } = useSelector(\n    (state: RootState) => state.settings\n  );\n\n  const map = useMemo<OLMap>(\n    () =>\n      new OLMap({\n        pixelRatio: 1,\n        controls: [],\n      }),\n    []\n  );\n\n  const nextFeature =\n    selectedFeature &&\n    sortedPointFeatures &&\n    getNextFeature(selectedFeature, sortedPointFeatures);\n\n  const prevFeature =\n    selectedFeature &&\n    sortedPointFeatures &&\n    getPrevFeature(selectedFeature, sortedPointFeatures);\n\n  const onPopupClose = useCallback(() => {\n    setIsPopupOpen(false);\n  }, []);\n\n  const onMapPointerMove = (evt: MapBrowserEvent<UIEvent>) => {\n    if (\n      (evt.originalEvent?.target as HTMLElement).nodeName.toLowerCase() ===\n      'canvas'\n    ) {\n      const pixel = map.getEventPixel(evt.originalEvent);\n      const features: FeatureLike[] = [];\n      map.forEachFeatureAtPixel(pixel, (feature) => {\n        features.push(feature);\n      });\n      const pointFeature = features.find(isGpxWayPoint);\n      (map.getTarget() as HTMLDivElement).style.cursor = pointFeature\n        ? 'pointer'\n        : '';\n    }\n  };\n\n  const onMapClick = (evt: MapBrowserEvent<UIEvent>) => {\n    const features = map.getFeaturesAtPixel(evt.pixel, { hitTolerance: 4 });\n    if (features && features.length) {\n      const feature = features.find(isGpxWayPoint);\n      if (feature) {\n        evt.preventDefault();\n        setSelectedFeature(feature as Feature<Point>);\n        setIsPopupOpen(true);\n      }\n    } else if (\n      (evt.originalEvent?.target as HTMLElement).nodeName.toLowerCase() ===\n      'canvas'\n    ) {\n      setIsPopupOpen(false);\n    }\n  };\n\n  const selectFeature = useCallback((feature: Feature<Point>) => {\n    setSelectedFeature(feature);\n  }, []);\n\n  useEffect(() => {\n    const { lat, lng, zoom } = initialState;\n    const target = mapRef.current;\n    if (target) {\n      const view = new View({\n        center: fromLonLat([lng, lat]),\n        zoom,\n      });\n      map.setTarget(target);\n      map.setView(view);\n      map.on('pointermove', onMapPointerMove);\n    }\n\n    pointSelectEvents.forEach((eventType) => map.on(eventType, onMapClick));\n\n    return () => {\n      if (target) {\n        map.un('pointermove', onMapPointerMove);\n      }\n      pointSelectEvents.forEach((eventType) => map.un(eventType, onMapClick));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onGpxSourceReady = useCallback((vectorSource: VectorSource) => {\n    const sortedFeatures = getSortedPointFeatures(vectorSource);\n    setSortedPointFeatures(sortedFeatures);\n  }, []);\n\n  return (\n    <div className={STYLES.Map} ref={mapRef}>\n      <GpxLayer\n        gpxUrl={gpxUrl}\n        showMarkers={showMarkers}\n        showRoute={showRoute}\n        onSourceReady={onGpxSourceReady}\n        map={map}\n      >\n        {(gpxVectorLayer) => {\n          return (\n            <Fragment>\n              {showControls && (\n                <MapControls map={map} source={gpxVectorLayer.getSource()} />\n              )}\n              <StartEndLayer\n                map={map}\n                gpxVectorLayer={gpxVectorLayer}\n                showMarkers={showMarkers}\n                gpxUrl={gpxUrl}\n              />\n              {selectedFeature && (\n                <Popup\n                  map={map}\n                  gpxVectorLayer={gpxVectorLayer}\n                  feature={selectedFeature}\n                  nextFeature={nextFeature}\n                  prevFeature={prevFeature}\n                  isOpen={isPopupOpen}\n                  onClose={onPopupClose}\n                  selectFeature={selectFeature}\n                />\n              )}\n            </Fragment>\n          );\n        }}\n      </GpxLayer>\n      <TileLayer map={map} mapUrl={mapUrl} />\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/corcega-gr20-calenzana-conca.746c310a.gpx\";","export default __webpack_public_path__ + \"static/media/gr-20-corcega-track-completo.a30138e6.gpx\";","import route5 from './corcega-gr20-calenzana-conca.gpx';\nimport route4 from './gr-20-corcega-track-completo.gpx';\nimport route1 from './gr20-2018-complete-northsouth.gpx';\nimport route2 from './gr20.gpx';\n\nexport const routes = [\n  {\n    name: 'corcega-gr20-calenzana-conca',\n    url: route5,\n  },\n  {\n    name: 'GR-20 Complete North South',\n    url: route1,\n    samplingDistance: 800,\n  },\n  {\n    name: 'Route 2',\n    url: route2,\n    samplingDistance: 100,\n  },\n  {\n    name: 'gr-20-corcega-track-completo',\n    url: route4,\n    samplingDistance: 100,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/gr20-2018-complete-northsouth.8025a3a8.gpx\";","export default __webpack_public_path__ + \"static/media/gr20.7a7912e7.gpx\";","import { createSlice } from '@reduxjs/toolkit';\nimport maps from '../data/maps/maps.json';\nimport { routes } from '../data/routes/routes';\n\nexport interface SettingsState {\n  mapUrl: string;\n  gpxUrl: string;\n  showElevationProfile: boolean;\n  showControls: boolean;\n  showMarkers: boolean;\n  showRoute: boolean;\n}\n\nconst initialState: SettingsState = {\n  mapUrl: maps[0].url,\n  gpxUrl: routes[0].url,\n  showElevationProfile: false,\n  showControls: true,\n  showMarkers: true,\n  showRoute: true,\n};\n\nconst SettingsSlice = createSlice({\n  name: 'Settings',\n  initialState,\n  reducers: {\n    updateSettings: (state, action): void => {\n      Object.assign(state, action.payload);\n    },\n  },\n});\n\nexport const { updateSettings } = SettingsSlice.actions;\n\nexport const { reducer: settingsReducer } = SettingsSlice;\n","import React, { useState } from 'react';\nimport { ButtonDropdown } from 'reactstrap';\n\nexport const Dropdown: React.FunctionComponent = ({ children }) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onMouseEnter = () => {\n    setIsOpen(true);\n  };\n\n  const onMouseLeave = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <ButtonDropdown\n      isOpen={isOpen}\n      toggle={toggle}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      {children}\n    </ButtonDropdown>\n  );\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport { IoMdCheckmark } from 'react-icons/io';\nimport {\n  ButtonGroup,\n  ButtonToolbar,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  FormGroup,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Dropdown from '../Dropdown/Dropdown';\nimport { INPUT_TYPES } from '../Form/Form';\nimport { DropdownOption, SelectedOptions } from '../Settings/types';\nimport STYLES from './DropdownGroup.module.scss';\n\nexport interface DropdownOptionsProps {\n  onChange: (name: string, value: string | boolean) => void;\n  options: DropdownOption[];\n  values: SelectedOptions;\n}\n\nexport const DropdownGroup: React.FunctionComponent<DropdownOptionsProps> = ({\n  onChange,\n  options,\n  values,\n}) => {\n  const onInputChange = ({ target }: { target: HTMLInputElement }) => {\n    const { name, type, checked, value: targetValue } = target;\n    const value = type === INPUT_TYPES.checkbox ? checked : targetValue;\n    onChange(name, value);\n  };\n\n  return (\n    <form className={STYLES.DropdownGroup}>\n      <ButtonToolbar>\n        <ButtonGroup>\n          {options.map(\n            ({ label: dropdownLabel, name: dropdownName, type, items }) => (\n              <Dropdown key={dropdownLabel}>\n                <DropdownToggle\n                  caret\n                  color=\"secondary\"\n                  className={STYLES.DropDown}\n                >\n                  {dropdownLabel}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {items.map(({ name: inputName, label, url }) =>\n                    type === 'formGroup' ? (\n                      <DropdownItem\n                        key={inputName}\n                        className={STYLES['DropdownGroup__form-item']}\n                      >\n                        <FormGroup\n                          check\n                          className={STYLES['DropdownGroup__form-group']}\n                        >\n                          <Label\n                            check\n                            onClick={(event) => {\n                              event.stopPropagation();\n                            }}\n                            className={STYLES['DropdownGroup__form-label']}\n                          >\n                            <Input\n                              name={inputName}\n                              type=\"checkbox\"\n                              checked={\n                                !!values[inputName as keyof SelectedOptions]\n                              }\n                              onChange={onInputChange}\n                            />{' '}\n                            {label}\n                          </Label>\n                        </FormGroup>\n                      </DropdownItem>\n                    ) : (\n                      <DropdownItem\n                        key={inputName}\n                        onClick={() => {\n                          if (url) {\n                            onChange(dropdownName, url);\n                          }\n                        }}\n                      >\n                        {url ===\n                        values[dropdownName as keyof SelectedOptions] ? (\n                          <IoMdCheckmark />\n                        ) : (\n                          <span\n                            style={{\n                              paddingLeft: '1em',\n                              display: 'inline-block',\n                            }}\n                          />\n                        )}{' '}\n                        {inputName}\n                      </DropdownItem>\n                    )\n                  )}\n                </DropdownMenu>\n              </Dropdown>\n            )\n          )}\n        </ButtonGroup>\n      </ButtonToolbar>\n    </form>\n  );\n};\n","import maps from '../../data/maps/maps.json';\nimport { routes } from '../../data/routes/routes';\nimport { DropdownOption } from './types';\n\nexport const options: DropdownOption[] = [\n  {\n    label: 'Routes',\n    name: 'gpxUrl',\n    items: routes,\n  },\n  {\n    label: 'Layers',\n    name: 'mapUrl',\n    items: maps,\n  },\n  {\n    label: 'Options',\n    name: 'options',\n    type: 'formGroup',\n    items: [\n      // {\n      //   name: 'showElevationProfile',\n      //   label: 'Show elevation profile',\n      // },\n      {\n        name: 'showControls',\n        label: 'Show controls',\n      },\n      {\n        name: 'showMarkers',\n        label: 'Show markers',\n      },\n      {\n        name: 'showRoute',\n        label: 'Show route',\n      },\n    ],\n  },\n];\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateSettings } from '../../features/settings';\nimport { RootState } from '../../store';\nimport { DropdownGroup } from '../DropdownGroup/DropdownGroup';\nimport { options } from './settingsOptions';\n\nexport const Settings: React.FunctionComponent = () => {\n  const settings = useSelector((state: RootState) => state.settings);\n  const dispatch = useDispatch();\n\n  const onSettingsChange = (name: string, value: string | boolean) => {\n    dispatch(\n      updateSettings({\n        [name]: value,\n      })\n    );\n  };\n\n  return (\n    <DropdownGroup\n      options={options}\n      values={settings}\n      onChange={onSettingsChange}\n    />\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport TopBarProgress from 'react-topbar-progress-indicator';\nimport { RootState } from '../../store';\n\nTopBarProgress.config({\n  barColors: {\n    0: 'yellow',\n    '1.0': 'yellow',\n  },\n  shadowBlur: 5,\n  barThickness: 3,\n});\n\nexport const Spinner: React.FunctionComponent = (props) => {\n  const { isVisible } = useSelector((state: RootState) => state.spinner);\n  document.body.style.cursor = isVisible ? 'progress' : 'default';\n  return isVisible ? <TopBarProgress /> : null;\n};\n","import React, { Fragment } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Map } from '../Map/Map';\nimport { Settings } from '../Settings/Settings';\nimport { Spinner } from '../Spinner/Spinner';\nimport STYLES from './MapPage.module.scss';\n\nexport const MapPage: React.FunctionComponent = () => (\n  <Fragment>\n    <Helmet>\n      <title>GR-20 - The Route</title>\n    </Helmet>\n    <div className={STYLES.MapPage}>\n      <Spinner />\n      <Settings />\n      <Map />\n    </div>\n  </Fragment>\n);\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport STYLES from './NotFoundPage.module.scss';\n\nexport const NotFoundPage: React.FunctionComponent = () => (\n  <div className={STYLES.NotFoundPage}>\n    <Helmet>\n      <title>404 Not Found</title>\n    </Helmet>\n    <h1>Not Found</h1>\n    <Link to=\"/\">Go Home &raquo;</Link>\n  </div>\n);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { AboutPage } from '../AboutPage/AboutPage';\nimport { IndexPage } from '../IndexPage/IndexPage';\nimport { MapPage } from '../MapPage/MapPage';\nimport { NotFoundPage } from '../NotFoundPage/NotFoundPage';\nimport STYLES from './App.module.scss';\n\nconst App: React.FunctionComponent = () => (\n  <div className={STYLES.App}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\" exact component={IndexPage} />\n        <Route path=\"/map/\" exact component={MapPage} />\n        <Route path=\"/about/\" exact component={AboutPage} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </Router>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      },\n      (e) => {\n        console.error(e);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { settingsReducer } from '../features/settings';\nimport { spinnerReducer } from '../features/spinner';\n\nexport const rootReducer = combineReducers({\n  settings: settingsReducer,\n  spinner: spinnerReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {\n  Action,\n  configureStore,\n  getDefaultMiddleware,\n  ThunkAction,\n} from '@reduxjs/toolkit';\nimport { rootReducer, RootState } from './rootReducer';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware(),\n});\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n\nexport type { RootState };\n\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}