{"version":3,"sources":["features/spinner.ts","features/settings.ts","data/routes/corcega-gr20-calenzana-conca.gpx","data/routes/gr-20-corcega-track-completo.gpx","data/routes/routes.ts","data/routes/gr20-2018-complete-northsouth.gpx","data/routes/gr20.gpx","components/App/App.module.scss","components/Spinner/Spinner.tsx","components/App/App.tsx","reportWebVitals.ts","store/rootReducer.ts","store/index.ts","index.tsx"],"names":["SpinnerSlice","createSlice","name","initialState","isVisible","reducers","showSpinner","state","hideSpinner","actions","spinnerReducer","reducer","mapUrl","maps","url","gpxUrl","routes","showElevationProfile","showControls","showMarkers","showRoute","SettingsSlice","updateSettings","action","Object","assign","payload","settingsReducer","route5","samplingDistance","route4","module","exports","TopBarProgress","config","barColors","0","shadowBlur","barThickness","Spinner","props","useSelector","spinner","document","body","style","cursor","Index","lazy","then","default","IndexPage","Map","MapPage","About","AboutPage","NotFound","NotFoundPage","ShowSpinner","dispatch","useDispatch","useEffect","App","className","STYLES","basename","process","fallback","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","e","console","error","rootReducer","combineReducers","settings","store","configureStore","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72732180.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport interface SpinnerState {\n  isVisible: boolean;\n}\n\nconst initialState: SpinnerState = {\n  isVisible: false,\n};\n\nconst SpinnerSlice = createSlice({\n  name: 'Spinner',\n  initialState,\n  reducers: {\n    showSpinner: (state): void => {\n      state.isVisible = true;\n    },\n    hideSpinner: (state): void => {\n      state.isVisible = false;\n    },\n  },\n});\n\nexport const { showSpinner, hideSpinner } = SpinnerSlice.actions;\n\nexport const { reducer: spinnerReducer } = SpinnerSlice;\n","import { createSlice } from '@reduxjs/toolkit';\nimport maps from '../data/maps/maps.json';\nimport { routes } from '../data/routes/routes';\n\nexport interface SettingsState {\n  mapUrl: string;\n  gpxUrl: string;\n  showElevationProfile: boolean;\n  showControls: boolean;\n  showMarkers: boolean;\n  showRoute: boolean;\n}\n\nconst initialState: SettingsState = {\n  mapUrl: maps[0].url,\n  gpxUrl: routes[0].url,\n  showElevationProfile: false,\n  showControls: true,\n  showMarkers: true,\n  showRoute: true,\n};\n\nconst SettingsSlice = createSlice({\n  name: 'Settings',\n  initialState,\n  reducers: {\n    updateSettings: (state, action): void => {\n      Object.assign(state, action.payload);\n    },\n  },\n});\n\nexport const { updateSettings } = SettingsSlice.actions;\n\nexport const { reducer: settingsReducer } = SettingsSlice;\n","export default __webpack_public_path__ + \"static/media/corcega-gr20-calenzana-conca.746c310a.gpx\";","export default __webpack_public_path__ + \"static/media/gr-20-corcega-track-completo.a30138e6.gpx\";","import route5 from './corcega-gr20-calenzana-conca.gpx';\nimport route4 from './gr-20-corcega-track-completo.gpx';\nimport route1 from './gr20-2018-complete-northsouth.gpx';\nimport route2 from './gr20.gpx';\n\nexport const routes = [\n  {\n    name: 'corcega-gr20-calenzana-conca',\n    url: route5,\n  },\n  {\n    name: 'GR-20 Complete North South',\n    url: route1,\n    samplingDistance: 800,\n  },\n  {\n    name: 'Route 2',\n    url: route2,\n    samplingDistance: 100,\n  },\n  {\n    name: 'gr-20-corcega-track-completo',\n    url: route4,\n    samplingDistance: 100,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/gr20-2018-complete-northsouth.8025a3a8.gpx\";","export default __webpack_public_path__ + \"static/media/gr20.7a7912e7.gpx\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2mBMi\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport TopBarProgress from 'react-topbar-progress-indicator';\nimport { RootState } from '../../store';\n\nTopBarProgress.config({\n  barColors: {\n    0: 'yellow',\n    '1.0': 'yellow',\n  },\n  shadowBlur: 5,\n  barThickness: 3,\n});\n\nexport const Spinner: React.FunctionComponent = (props) => {\n  const { isVisible } = useSelector((state: RootState) => state.spinner);\n  document.body.style.cursor = isVisible ? 'progress' : 'default';\n  return isVisible ? <TopBarProgress /> : null;\n};\n","import React, { lazy, Suspense, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { hideSpinner, showSpinner } from '../../features/spinner';\n\nimport STYLES from './App.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { Spinner } from '../Spinner/Spinner';\n\nconst Index = lazy(() =>\n  import(/* webpackChunkName: \"index-page\" */ '../IndexPage/IndexPage').then(\n    ({ IndexPage }) => ({\n      default: IndexPage,\n    })\n  )\n);\n\nconst Map = lazy(() =>\n  import(/* webpackChunkName: \"map-page\" */ '../MapPage/MapPage').then(\n    ({ MapPage }) => ({\n      default: MapPage,\n    })\n  )\n);\n\nconst About = lazy(() =>\n  import(/* webpackChunkName: \"about-page\" */ '../AboutPage/AboutPage').then(\n    ({ AboutPage }) => ({\n      default: AboutPage,\n    })\n  )\n);\n\nconst NotFound = lazy(() =>\n  import(\n    /* webpackChunkName: \"not-found-page\" */ '../NotFoundPage/NotFoundPage'\n  ).then(({ NotFoundPage }) => ({\n    default: NotFoundPage,\n  }))\n);\n\nconst ShowSpinner: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(showSpinner());\n    return () => {\n      dispatch(hideSpinner());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return null;\n};\n\nconst App: React.FunctionComponent = () => (\n  <div className={STYLES.App}>\n    <Spinner />\n    <Router basename={process.env.PUBLIC_URL}>\n      <Suspense fallback={<ShowSpinner />}>\n        <Switch>\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/map/\" exact component={Map} />\n          <Route path=\"/about/\" exact component={About} />\n          <Route component={NotFound} />\n        </Switch>\n      </Suspense>\n    </Router>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      },\n      (e) => {\n        console.error(e);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { settingsReducer } from '../features/settings';\nimport { spinnerReducer } from '../features/spinner';\n\nexport const rootReducer = combineReducers({\n  settings: settingsReducer,\n  spinner: spinnerReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {\n  Action,\n  configureStore,\n  getDefaultMiddleware,\n  ThunkAction,\n} from '@reduxjs/toolkit';\nimport { rootReducer, RootState } from './rootReducer';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware(),\n});\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n\nexport type { RootState };\n\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}