{"version":3,"sources":["components/DropdownGroup/DropdownGroup.module.scss","components/IndexPage/IndexPage.module.scss","components/StartEndLayer/baseline-location_on-24px-yellow.svg","components/MapControls/MapControls.module.scss","components/IndexPage/cover.jpg","data/routes/corcega-gr20-calenzana-conca.gpx","data/routes/gr20-2018-complete-northsouth.gpx","data/routes/gr20.gpx","data/routes/gr-20-corcega-track-completo.gpx","components/MapPage/MapPage.module.scss","components/Map/Map.module.scss","components/Popup/Popup.module.scss","components/MyLocationButtonControl/baseline-my_location-24px-yellow.svg","components/AboutPage/AboutPage.module.scss","components/NotFoundPage/NotFoundPage.module.scss","components/Dropdown/Dropdown.jsx","data/routes/routes.js","components/Options/OptionsProvider.jsx","components/Options/dropdownOptions.js","components/DropdownGroup/DropdownGroup.jsx","components/Map/Map.jsx","components/Spinner/SpinnerProvider.jsx","components/Spinner/Spinner.jsx","util/util.js","components/ButtonControl/ButtonControl.jsx","components/MyLocationButtonControl/MyLocationButtonControl.jsx","util/downloadUtil.js","components/DownloadButtonControl/DownloadButtonControl.jsx","components/ZoomToExtentButtonControl/ZoomToExtentButtonControl.jsx","components/PdfExportButtonControl/PdfExportButtonControl.jsx","components/MapControls/controls.js","components/MapControls/MapControls.jsx","components/Popup/CloseButtonControl.jsx","components/Popup/ZoomInButtonControl.jsx","components/Popup/PrevPointButtonControl.jsx","components/Popup/NextPointButtonControl.jsx","components/Popup/360-24px.svg","components/Popup/Google360ButtonControl.jsx","components/Popup/Popup.jsx","components/GpxLayer/styles.js","components/GpxLayer/GpxLayer.jsx","components/TileLayer/TileLayer.jsx","components/StartEndLayer/StartEndLayer.jsx","components/MapPage/MapPage.jsx","components/IndexPage/IndexPage.jsx","components/AboutPage/AboutPage.jsx","components/NotFoundPage/NotFoundPage.jsx","components/App/App.jsx","index.jsx","components/ButtonControl/ButtonControl.module.scss"],"names":["module","exports","DropdownGroup","DropdownGroup__form-item","DropdownGroup__form-group","DropdownGroup__form-label","IndexPage__cover","IndexPage__cover-overlay","__webpack_require__","p","MapControls","MapControls__button-control","MapPage","Map","Popup","fadein","Popup__button-control","AboutPage","NotFoundPage","Dropdown","state","isOpen","toggle","name","_this","setState","_ref","onMouseEnter","onMouseLeave","this","children","props","react_default","a","createElement","ButtonDropdown","Component","routes","url","route5","route1","samplingDistance","route2","route4","initialState","values","gpxUrl","mapUrl","showElevationProfile","showControls","showMarkers","showRoute","dropdownOptions","label","items","maps","type","OptionsContext","React","createContext","OptionsProvider","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","value","objectSpread","defineProperty","assign","Provider","target","checked","targetValue","_this2","_this$props","options","className","STYLES","ButtonToolbar","ButtonGroup","map","_ref2","dropdownLabel","dropdownName","isSelected","components_Dropdown_Dropdown","key","DropdownToggle","caret","color","DropDown","DropdownMenu","right","_ref3","inputName","DropdownItem","FormGroup","check","Label","onClick","event","stopPropagation","Input","eventKey","io","style","paddingLeft","display","components_DropdownGroup_DropdownGroup","Consumer","_ref4","DropdownGroup_DropdownGroup","lat","lng","zoom","mapReady","OLMap","pixelRatio","renderer","controls","MapContext","onMapPointerMove","evt","originalEvent","nodeName","toLowerCase","pixel","getEventPixel","features","forEachFeatureAtPixel","feature","push","length","getTarget","cursor","mapRef","createRef","_this$state","current","view","View","center","fromLonLat","setTarget","setView","on","un","ref","defaultProps","SpinnerContext","SpinnerProvider","show","undefined","TopBarProgress","config","barColors","0","1.0","shadowBlur","barThickness","Spinner","document","body","lib_default","components_Spinner_Spinner","context","Spinner_Spinner","MULTI_LINE_STRING","GeometryType","POINT","getElevation","coords","Math","round","getDataFromCoords","lonLat","toLonLat","hdms","toStringHDMS","getHDMS","elevation","getDataFromPointFeature","gpxVectorLayer","sortedPointFeatures","multiLineCoords","getMultiLineStringFeature","getSource","getFeatures","getGeometry","getCoordinates","sortedPoint","find","featurePoint","Error","sortedPointIndex","indexOf","nextPoint","slice","index","multiCoords","data","reduce","accumulator","currentValue","i","nextValue","distance","LineString","getLength","currentElevation","elevationGainDown","abs","elevationGainUp","distanceInKm","toFixed","getDataFromMultiCoords","getLayerById","id","getLayers","getArray","layer","get","getType","getPointFeatures","filter","getSortedPointFeatures","vectorLayer","points","multiLine","point","closestPointInMultiLine","getClosestPoint","closesPointIndex","findIndex","coord","sort","b","dims","a0","a1","a2","a3","a4","a5","exportMapToPDF","asyncToGenerator","regenerator_default","mark","_callee2","format","resolution","reset","extent","pdf","onBeforeRender","_args2","arguments","wrap","_context2","prev","next","abrupt","Promise","_callee","resolve","JSPDF","dim","size","defaultExtent","width","height","printSize","_context","e","then","t","bind","sent","default","getSize","getView","calculateExtent","once","canvas","toDataURL","addImage","setSize","fit","stop","_x2","apply","_x","c","classNames","ButtonControl","tooltipOpen","buttonRef","toggleTooltip","addEventListener","removeEventListener","tooltip","tooltipPlacement","buttonClassName","rest","objectWithoutProperties","ButtonControl__container","Tooltip","placement","delay","hide","LAYER_ID","FEATURE_ID","ANIMATION_DURATION","FullScreenButtonControl","onButtonCLick","showSpinner","navigator","addLayer","geolocation","getCurrentPosition","onGetCurrentPosition","alert","position","_this$props2","longitude","latitude","getFeatureById","setGeometry","Point","animate","duration","Feature","setId","setStyle","Style","image","Icon","anchor","src","marker","VectorLayer","source","VectorSource","set","removeLayer","_this$props3","components_ButtonControl_ButtonControl","md","addGPXToZip","zip","gpxFileUrl","gpxFileResponse","gpxText","fileName","getUrl","fetch","text","split","pop","file","addPDFTextToCanvas","sortedPointsFeatures","getContext","font","fillStyle","shadowColor","lineWidth","fillText","concat","getProperties","getMultiStagePDF","stageFeatures","onLoadStart","onLoadEnd","promise","stageFeature","boundingExtent","addPage","_x3","_x4","_x5","getCurrentViewPDF","_callee3","_context3","_x6","_x7","_x8","_x9","_x10","_x11","addPDFToZip","_callee4","option","pdfArgs","finalPDF","_args4","_context4","t0","output","_x12","downloadZipFile","_ref5","_callee5","includeGPX","includePDF","pdfFormat","pdfResolution","pdfOption","_ref6","JSZip","initialExtent","zipFileName","rootZipDir","content","_context5","all","folder","generateAsync","saveAs","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","DownloadButtonControl","modalOpen","onFieldChange","onDownloadButtonClick","download","react","Modal","centered","ModalHeader","ModalBody","Form","row","for","sm","Col","Alert","Button","disabled","ZoomToExtentButtonControl","PdfExportButtonControl","save","fa","zoomControl","Zoom","attributionControl","Attribution","collapsible","scaleLineControl","ScaleLine","units","minWidth","tooltipToggle","openTooltipIndex","zoomContainerRef","forEach","control","addControl","removeControl","buttonProps","components_ZoomToExtentButtonControl_ZoomToExtentButtonControl","components_PdfExportButtonControl_PdfExportButtonControl","components_DownloadButtonControl_DownloadButtonControl","MyLocationButtonControl","components_MapControls_MapControls","MapControls_MapControls","CloseButtonControl","ButtonControl__close","ZoomInButtonControl","PrevPointButtonControl","_extends","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_360_24px_ref2","d","_360_24px_ref3","fill","_360_24px_Svg36024px","svgRef","viewBox","ForwardRef","forwardRef","Google360ButtonControl","pointName","embedUrl","maxWidth","title","frameBorder","border","allowFullScreen","pointSelectEvents","EventType","MOUSEDOWN","TOUCHSTART","MSPOINTERDOWN","MapBrowserEventType","POINTERDOWN","modifiers","enabled","preventOverflow","flip","containerRef","onMapClick","getFeaturesAtPixel","hitTolerance","openPopup","onCloseButtonClick","onNextPointButtonClick","sortedPointFeatureIndex","onPrevPointButtonClick","_this$state2","prevPoint","onZoomInButtonClick","easing","easeOut","overlay","Overlay","element","autoPan","autoPanAnimation","stopEvent","insertFirst","addOverlay","eventType","setSortedPoints","prevProps","prevState","_this3","_this4","_this5","_feature$getPropertie","google360Url","coordinates","coordinate","nextState","getId","setPosition","setTimeout","_this6","_this$state3","lon","hasNextPoint","Popover","container","PopoverHeader","Popup_CloseButtonControl","verticalAlign","PopoverBody","paddingTop","Popup_ZoomInButtonControl","Popup_PrevPointButtonControl","NextPointButtonControl","Popup_Google360ButtonControl","components_Popup_Popup","Popup_Popup","styles","Circle","Fill","stroke","Stroke","radius","MultiLineString","GpxLayer","gpxMarkers","multiLineFeature","setSource","toggleMarkers","toggleRoute","onSourceLoadStart","onSourceLoadEnd","GPX","readExtensions","extensionsNode","toConsumableArray","getElementsByTagName","node","getAttribute","textContent","setProperties","getState","STATE","READY","markerPoint","addFeature","removeFeature","components_GpxLayer_GpxLayer","GpxLayer_GpxLayer","urls","expandUrl","flat","TileLayer","xyzSource","OSM","rasterLayer","Tile","setUrl","Helmet","href","URL","origin","rel","components_TileLayer_TileLayer","TileLayer_TileLayer","createPointTextFeature","Text","offsetY","pointTextStyle","StartEndLayer","setLayerSource","yellowMarker","multiLineStringGeometry","getFirstCoordinate","getLastCoordinate","setVisible","components_StartEndLayer_StartEndLayer","StartEndLayer_StartEndLayer","initialOptions","Spinner_SpinnerProvider","Options_OptionsProvider","components_Map_Map","IndexPage","backgroundImage","cover","top","left","alt","role","textShadow","Link","to","Navbar","dark","expand","NavbarBrand","tag","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","active","App","BrowserRouter","basename","process","Switch","Route","path","exact","component","window","snapSaveState","querySelectorAll","parentNode","removeChild","rootElement","getElementById","hasChildNodes","hydrate","components_App_App","render","ButtonControl__close-button"],"mappings":"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","file":"static/js/main.ae9def2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropdownGroup\":\"DropdownGroup_DropdownGroup__3MauO\",\"DropdownGroup__form-item\":\"DropdownGroup_DropdownGroup__form-item__1UKG4\",\"DropdownGroup__form-group\":\"DropdownGroup_DropdownGroup__form-group__26NYU\",\"DropdownGroup__form-label\":\"DropdownGroup_DropdownGroup__form-label__3dH8L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IndexPage__cover\":\"IndexPage_IndexPage__cover__akPUs\",\"IndexPage__cover-overlay\":\"IndexPage_IndexPage__cover-overlay__1QWvE\"};","module.exports = __webpack_public_path__ + \"static/media/baseline-location_on-24px-yellow.245d8178.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MapControls\":\"MapControls_MapControls__1BkIR\",\"MapControls__button-control\":\"MapControls_MapControls__button-control__3rcjc\"};","module.exports = __webpack_public_path__ + \"static/media/cover.3777a8e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/corcega-gr20-calenzana-conca.04f2c61a.gpx\";","module.exports = __webpack_public_path__ + \"static/media/gr20-2018-complete-northsouth.932295f4.gpx\";","module.exports = __webpack_public_path__ + \"static/media/gr20.09708416.gpx\";","module.exports = __webpack_public_path__ + \"static/media/gr-20-corcega-track-completo.cb9fde80.gpx\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MapPage\":\"MapPage_MapPage__2EUUf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Map\":\"Map_Map__1FJ6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Popup\":\"Popup_Popup__3L3z6\",\"fadein\":\"Popup_fadein__fmHD7\",\"Popup__button-control\":\"Popup_Popup__button-control__3mE0V\"};","module.exports = __webpack_public_path__ + \"static/media/baseline-my_location-24px-yellow.a1dc0e4f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutPage\":\"AboutPage_AboutPage__QFBBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFoundPage\":\"NotFoundPage_NotFoundPage__3-U_9\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonDropdown } from 'reactstrap';\n\nclass Dropdown extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = name => {\n    this.setState(({ isOpen }) => ({\n      isOpen: !isOpen,\n    }));\n  };\n\n  onMouseEnter = () => {\n    this.setState({\n      isOpen: true,\n    });\n  };\n\n  onMouseLeave = () => {\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    const { children } = this.props;\n    return (\n      <ButtonDropdown\n        isOpen={isOpen}\n        toggle={this.toggle}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n      >\n        {children}\n      </ButtonDropdown>\n    );\n  }\n}\n\nDropdown.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Dropdown;\n","import route1 from './gr20-2018-complete-northsouth.gpx';\nimport route2 from './gr20.gpx';\nimport route4 from './gr-20-corcega-track-completo.gpx';\nimport route5 from './corcega-gr20-calenzana-conca.gpx';\n\nexport default [\n  {\n    name: 'corcega-gr20-calenzana-conca',\n    url: route5,\n  },\n  {\n    name: 'GR-20 Complete North South',\n    url: route1,\n    samplingDistance: 800,\n  },\n  {\n    name: 'Route 2',\n    url: route2,\n    samplingDistance: 100,\n  },\n  {\n    name: 'gr-20-corcega-track-completo',\n    url: route4,\n    samplingDistance: 100,\n  },\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport dropdownOptions from './dropdownOptions';\n\nconst initialState = {\n  values: {\n    gpxUrl: null,\n    mapUrl: null,\n    showElevationProfile: false,\n    showControls: true,\n    showMarkers: true,\n    showRoute: true,\n  },\n  dropdownOptions,\n};\nexport const OptionsContext = React.createContext(initialState);\n\nclass OptionsProvider extends Component {\n  constructor(props) {\n    super(props);\n    const state = {\n      ...initialState,\n      onChange: this.onChange,\n    };\n    Object.assign(state.values, props.values);\n    this.state = state;\n  }\n\n  onChange = (name, value) => {\n    this.setState(({ values }) => ({\n      values: {\n        ...values,\n        [name]: value,\n      },\n    }));\n  };\n\n  render() {\n    const { children } = this.props;\n    return (\n      <OptionsContext.Provider value={this.state}>\n        {children}\n      </OptionsContext.Provider>\n    );\n  }\n}\n\nOptionsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  values: PropTypes.shape().isRequired,\n};\n\nexport default OptionsProvider;\n","import maps from '../../data/maps/maps';\nimport routes from '../../data/routes/routes';\n\nexport default [\n  {\n    label: 'Routes',\n    name: 'gpxUrl',\n    items: routes,\n  },\n  {\n    label: 'Layers',\n    name: 'mapUrl',\n    items: maps,\n  },\n  {\n    label: 'Options',\n    name: 'options',\n    type: 'formGroup',\n    items: [\n      {\n        name: 'showElevationProfile',\n        label: 'Show elevation profile',\n      },\n      {\n        name: 'showControls',\n        label: 'Show controls',\n      },\n      {\n        name: 'showMarkers',\n        label: 'Show markers',\n      },\n      {\n        name: 'showRoute',\n        label: 'Show route',\n      },\n    ],\n  },\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  FormGroup,\n  Label,\n  Input,\n  ButtonGroup,\n  ButtonToolbar,\n} from 'reactstrap';\nimport { IoMdCheckmark } from 'react-icons/io';\nimport Dropdown from '../Dropdown/Dropdown';\nimport { OptionsContext } from '../Options/OptionsProvider';\n\nimport STYLES from './DropdownGroup.module.scss';\n\nclass DropdownGroup extends Component {\n  onChange = ({ target }) => {\n    const { name, type, checked, value: targetValue } = target;\n    const value = type === 'checkbox' ? checked : targetValue;\n    const { onChange } = this.props;\n    onChange(name, value);\n  };\n\n  render() {\n    const { options, values } = this.props;\n    return (\n      <form className={STYLES.DropdownGroup}>\n        <ButtonToolbar>\n          <ButtonGroup>\n            {options.map(\n              ({\n                label: dropdownLabel,\n                name: dropdownName,\n                type,\n                items,\n                isSelected,\n              }) => (\n                <Dropdown key={dropdownLabel}>\n                  <DropdownToggle\n                    caret\n                    color=\"secondary\"\n                    className={STYLES.DropDown}\n                  >\n                    {dropdownLabel}\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {items.map(({ name: inputName, label, url }) =>\n                      type === 'formGroup' ? (\n                        <DropdownItem\n                          key={inputName}\n                          className={STYLES['DropdownGroup__form-item']}\n                        >\n                          <FormGroup\n                            check\n                            className={STYLES['DropdownGroup__form-group']}\n                          >\n                            <Label\n                              check\n                              onClick={event => {\n                                event.stopPropagation();\n                              }}\n                              className={STYLES['DropdownGroup__form-label']}\n                            >\n                              <Input\n                                name={inputName}\n                                type=\"checkbox\"\n                                checked={values[inputName]}\n                                onChange={this.onChange}\n                              />{' '}\n                              {label}\n                            </Label>\n                          </FormGroup>\n                        </DropdownItem>\n                      ) : (\n                        <DropdownItem\n                          key={inputName}\n                          onClick={eventKey => {\n                            this.onChange({\n                              target: {\n                                name: dropdownName,\n                                value: url,\n                              },\n                            });\n                          }}\n                        >\n                          {url === values[dropdownName] ? (\n                            <IoMdCheckmark />\n                          ) : (\n                            <span\n                              style={{\n                                paddingLeft: '1em',\n                                display: 'inline-block',\n                              }}\n                            />\n                          )}{' '}\n                          {inputName}\n                        </DropdownItem>\n                      )\n                    )}\n                  </DropdownMenu>\n                </Dropdown>\n              )\n            )}\n          </ButtonGroup>\n        </ButtonToolbar>\n      </form>\n    );\n  }\n}\n\nDropdownGroup.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  values: PropTypes.shape().isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      name: PropTypes.string,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          label: PropTypes.string,\n          url: PropTypes.string,\n        })\n      ),\n    })\n  ).isRequired,\n};\n\nexport default props => (\n  <OptionsContext.Consumer>\n    {({ dropdownOptions, values, onChange }) => (\n      <DropdownGroup\n        options={dropdownOptions}\n        values={values}\n        onChange={onChange}\n        {...props}\n      />\n    )}\n  </OptionsContext.Consumer>\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport OLMap from 'ol/Map';\nimport View from 'ol/View';\nimport { fromLonLat } from 'ol/proj';\n// import sync from 'ol-hashed';\n\nimport 'ol/ol.css';\n\nimport STYLES from './Map.module.scss';\n\nconst initialState = {\n  lat: 42.184207,\n  lng: 9.1079,\n  zoom: 9,\n  mapReady: false,\n  map: new OLMap({\n    pixelRatio: 1,\n    renderer: 'webgl',\n    controls: [],\n  }),\n};\n\nexport const MapContext = React.createContext(initialState);\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.state = {\n      ...initialState,\n    };\n  }\n\n  componentDidMount() {\n    const { lat, lng, zoom, map } = this.state;\n    const target = this.mapRef.current;\n    const view = new View({\n      center: fromLonLat([lng, lat]),\n      zoom,\n    });\n    map.setTarget(target);\n    map.setView(view);\n    map.on('pointermove', this.onMapPointerMove);\n    // sync(map);\n  }\n\n  componentWillUnmount() {\n    const { map } = this.state;\n    map.un('pointermove', this.onMapPointerMove);\n  }\n\n  onMapPointerMove = evt => {\n    const { map } = this.state;\n    if (evt.originalEvent.target.nodeName.toLowerCase() === 'canvas') {\n      const pixel = map.getEventPixel(evt.originalEvent);\n      const features = [];\n      map.forEachFeatureAtPixel(pixel, feature => {\n        features.push(feature);\n      });\n      if (features.length > 0) {\n        map.getTarget().style.cursor = 'pointer';\n      } else {\n        map.getTarget().style.cursor = '';\n      }\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    return (\n      <MapContext.Provider value={this.state}>\n        <div className={STYLES.Map} ref={this.mapRef}>\n          {children}\n        </div>\n      </MapContext.Provider>\n    );\n  }\n}\n\nMap.propTypes = {\n  children: PropTypes.node,\n};\n\nMap.defaultProps = {\n  children: null,\n};\n\nexport default Map;\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst initialState = {\n  isOpen: false,\n};\nexport const SpinnerContext = React.createContext();\n\nclass SpinnerProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState,\n      toggle: this.toggle,\n    };\n  }\n\n  toggle = show => {\n    this.setState(({ isOpen }) => ({\n      isOpen: show !== undefined ? show : !isOpen,\n    }));\n  };\n\n  render() {\n    const { children } = this.props;\n    return (\n      <SpinnerContext.Provider value={this.state}>\n        {children}\n      </SpinnerContext.Provider>\n    );\n  }\n}\n\nSpinnerProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default SpinnerProvider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TopBarProgress from 'react-topbar-progress-indicator';\nimport { SpinnerContext } from './SpinnerProvider';\n\nTopBarProgress.config({\n  barColors: {\n    '0': 'yellow',\n    '1.0': 'yellow',\n  },\n  shadowBlur: 5,\n  barThickness: 3,\n});\n\nconst Spinner = props => {\n  const { isOpen } = props;\n  document.body.style.cursor = isOpen ? 'progress' : 'default';\n  return isOpen ? <TopBarProgress /> : null;\n};\n\nSpinner.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default props => (\n  <SpinnerContext.Consumer>\n    {context => <Spinner isOpen={context.isOpen} />}\n  </SpinnerContext.Consumer>\n);\n","import LineString from 'ol/geom/LineString';\nimport { toStringHDMS } from 'ol/coordinate';\nimport { toLonLat } from 'ol/proj';\nimport GeometryType from 'ol/geom/GeometryType';\n\nconst { MULTI_LINE_STRING, POINT } = GeometryType;\n\nexport const getHDMS = coords => {\n  const lonLat = toLonLat(coords);\n  const hdms = toStringHDMS(lonLat);\n  return hdms;\n};\n\nexport const getElevation = coords => {\n  const elevation = Math.round(coords[2]);\n  return elevation;\n};\n\nexport const getDataFromMultiCoords = multiCoords => {\n  const data = multiCoords.reduce(\n    (accumulator, currentValue, i) => {\n      if (i === multiCoords.length - 1) {\n        return accumulator;\n      }\n      const nextValue = multiCoords[i + 1];\n\n      accumulator.distance += new LineString([\n        currentValue,\n        nextValue,\n      ]).getLength();\n\n      const currentElevation = getElevation(currentValue);\n      const nextElevation = getElevation(nextValue);\n      const elevation = nextElevation - currentElevation;\n\n      if (elevation < 0) {\n        accumulator.elevationGainDown += Math.abs(elevation);\n      } else {\n        accumulator.elevationGainUp += elevation;\n      }\n\n      return accumulator;\n    },\n    {\n      distance: 0,\n      elevationGainUp: 0,\n      elevationGainDown: 0,\n    }\n  );\n  data.distanceInKm = (data.distance / 1000).toFixed(2);\n  return data;\n};\n\nexport const getDataFromCoords = coords => {\n  const lonLat = toLonLat(coords);\n  const hdms = getHDMS(coords);\n  const elevation = getElevation(coords);\n  return { lonLat, hdms, elevation };\n};\n\nexport const getDataFromPointFeature = (\n  feature,\n  gpxVectorLayer,\n  sortedPointFeatures\n) => {\n  const multiLine = getMultiLineStringFeature(\n    gpxVectorLayer.getSource().getFeatures()\n  );\n\n  const multiLineCoords = multiLine.getGeometry().getCoordinates()[0];\n\n  const sortedPoint = sortedPointFeatures.find(\n    ({ featurePoint }) => featurePoint === feature\n  );\n\n  if (!sortedPoint) {\n    throw new Error(\n      'getDataFromPointFeature: unable to find feature in sorted point features'\n    );\n  }\n\n  const sortedPointIndex = sortedPointFeatures.indexOf(sortedPoint);\n  const nextPoint = sortedPointFeatures[sortedPointIndex + 1];\n\n  if (nextPoint) {\n    const coords = multiLineCoords.slice(sortedPoint.index, nextPoint.index);\n    return {\n      sortedPoint,\n      ...getDataFromMultiCoords(coords),\n    };\n  }\n  return {\n    sortedPoint,\n  };\n};\n\nexport const getLayerById = (map, id) =>\n  map\n    .getLayers()\n    .getArray()\n    .find(layer => layer.get('id') === id);\n\nexport const getMultiLineStringFeature = features =>\n  features.find(\n    feature => feature.getGeometry().getType() === MULTI_LINE_STRING\n  );\n\nexport const getPointFeatures = features =>\n  features.filter(feature => feature.getGeometry().getType() === POINT);\n\nexport const getSortedPointFeatures = vectorLayer => {\n  const points = getPointFeatures(vectorLayer.getSource().getFeatures());\n  const multiLine = getMultiLineStringFeature(\n    vectorLayer.getSource().getFeatures()\n  );\n  if (!multiLine) {\n    throw new Error(\n      'getSortedPointFeatures: unable to find multiLine feature in gpx vector layer'\n    );\n  }\n  const multiLineCoords = multiLine.getGeometry().getCoordinates()[0];\n  const pointsInMultiLine = points.map(point => {\n    const closestPointInMultiLine = multiLine\n      .getGeometry()\n      .getClosestPoint(point.getGeometry().getCoordinates());\n    const margin = 50; // meters\n    const closesPointIndex = multiLineCoords.findIndex(\n      coord =>\n        new LineString([coord, closestPointInMultiLine]).getLength() < margin\n    );\n    return {\n      featurePoint: point,\n      closestPointInMultiLine,\n      index: closesPointIndex,\n    };\n  });\n  const sortedPointsInMultiline = pointsInMultiLine.sort(\n    (a, b) => a.index - b.index\n  );\n  return sortedPointsInMultiline;\n};\n\nexport const sampleCoordinates = (coords, minDistanceThreshold = 0) => {\n  let curMinDistance = 0;\n  let distanceFromStart = 0;\n  return coords\n    .map((coord, i) => {\n      const distance =\n        i === 0 ? 0 : new LineString([coords[i - 1], coord]).getLength(); // meter\n      distanceFromStart += distance;\n      return {\n        coord,\n        distance,\n        distanceFromStart,\n      };\n    })\n    .filter((point, i) => {\n      curMinDistance += point.distance;\n      if (!i || curMinDistance > minDistanceThreshold) {\n        curMinDistance = 0;\n        return true;\n      }\n      return false;\n    });\n};\n\nconst dims = {\n  a0: [1189, 841],\n  a1: [841, 594],\n  a2: [594, 420],\n  a3: [420, 297],\n  a4: [297, 210],\n  a5: [210, 148],\n};\n\nexport const exportMapToPDF = async (\n  map,\n  format = 'a4',\n  resolution = 150,\n  reset = true,\n  extent = null,\n  pdf,\n  onBeforeRender = () => {}\n) =>\n  new Promise(async resolve => {\n    if (!pdf) {\n      const {\n        default: JSPDF,\n      } = await import(/* webpackChunkName: \"jspdf\" */ 'jspdf');\n      // eslint-disable-next-line no-param-reassign\n      pdf = new JSPDF('landscape', undefined, format);\n    }\n    const dim = dims[format];\n    const size = map.getSize();\n    const defaultExtent = map.getView().calculateExtent(size);\n\n    map.once('rendercomplete', event => {\n      const { canvas } = event.context;\n      onBeforeRender(canvas);\n      const data = canvas.toDataURL('image/jpeg');\n      pdf.addImage(data, 'JPEG', 0, 0, dim[0], dim[1]);\n      if (reset) {\n        map.setSize(size);\n        map.getView().fit(extent || defaultExtent, { size });\n      }\n      resolve(pdf);\n    });\n\n    const width = Math.round((dim[0] * resolution) / 25.4);\n    const height = Math.round((dim[1] * resolution) / 25.4);\n    const printSize = [width, height];\n\n    map.setSize(printSize);\n    map.getView().fit(extent || defaultExtent, { size: printSize });\n  });\n","import React, { Component } from 'react';\nimport classNames from 'classnames/bind';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'reactstrap';\n\nimport STYLES from './ButtonControl.module.scss';\n\nconst c = classNames.bind(STYLES);\n\nclass ButtonControl extends Component {\n  state = {\n    tooltipOpen: false,\n  };\n\n  buttonRef = React.createRef();\n\n  componentDidMount() {\n    const { onClick } = this.props;\n    this.buttonRef.current.addEventListener('click', onClick);\n  }\n\n  componentWillUnmount() {\n    const { onClick } = this.props;\n    this.buttonRef.current.removeEventListener('click', onClick);\n  }\n\n  toggleTooltip = () => {\n    this.setState(({ tooltipOpen }) => ({\n      tooltipOpen: !tooltipOpen,\n    }));\n  };\n\n  render() {\n    const { tooltipOpen } = this.state;\n    const {\n      children,\n      className,\n      tooltip,\n      tooltipPlacement,\n      onClick,\n      buttonClassName,\n      ...rest\n    } = this.props;\n    return (\n      <div className={c(STYLES.ButtonControl__container, className)}>\n        <button\n          className={c(STYLES.ButtonControl, buttonClassName)}\n          type=\"button\"\n          ref={this.buttonRef}\n          {...rest}\n        >\n          {children}\n        </button>\n        {tooltip && this.buttonRef.current && (\n          <Tooltip\n            placement={tooltipPlacement}\n            isOpen={tooltipOpen}\n            target={this.buttonRef.current}\n            toggle={this.toggleTooltip}\n            delay={{ show: 0, hide: 0 }}\n          >\n            {tooltip}\n          </Tooltip>\n        )}\n      </div>\n    );\n  }\n}\n\nButtonControl.propTypes = {\n  className: PropTypes.string,\n  buttonClassName: PropTypes.string,\n  tooltip: PropTypes.string,\n  tooltipPlacement: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nButtonControl.defaultProps = {\n  className: null,\n  buttonClassName: null,\n  tooltip: null,\n  tooltipPlacement: 'bottom',\n};\n\nexport default ButtonControl;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdMyLocation } from 'react-icons/md';\nimport Map from 'ol/Map';\nimport { fromLonLat } from 'ol/proj';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport Feature from 'ol/Feature';\nimport Style from 'ol/style/Style';\nimport Icon from 'ol/style/Icon';\nimport Point from 'ol/geom/Point';\n\nimport { getLayerById } from '../../util/util';\n\nimport ButtonControl from '../ButtonControl/ButtonControl';\n\nimport marker from './baseline-my_location-24px-yellow.svg';\n\nconst LAYER_ID = 'mylocation_layer';\nconst FEATURE_ID = 'mylocation_feature';\nconst ANIMATION_DURATION = 1000;\n\nclass FullScreenButtonControl extends Component {\n  constructor(props) {\n    super(props);\n    const feature = new Feature({\n      name: 'My Location',\n    });\n    feature.setId(FEATURE_ID);\n    feature.setStyle(\n      new Style({\n        image: new Icon({\n          anchor: [0.5, 0.5],\n          src: marker,\n        }),\n      })\n    );\n\n    this.vectorLayer = new VectorLayer({\n      source: new VectorSource({\n        features: [feature],\n      }),\n    });\n    this.vectorLayer.set('id', LAYER_ID);\n  }\n\n  componentWillUnmount() {\n    const { map } = this.props;\n    map.removeLayer(this.vectorLayer);\n  }\n\n  onButtonCLick = () => {\n    const { showSpinner, map } = this.props;\n    if ('geolocation' in navigator) {\n      showSpinner(true);\n      if (!getLayerById(map, LAYER_ID)) {\n        map.addLayer(this.vectorLayer);\n      }\n      navigator.geolocation.getCurrentPosition(this.onGetCurrentPosition);\n    } else {\n      // eslint-disable-next-line no-alert\n      alert('Geolocation is not supported in your browser');\n    }\n  };\n\n  onGetCurrentPosition = position => {\n    const { showSpinner, map } = this.props;\n    showSpinner(false);\n\n    const coords = fromLonLat([\n      position.coords.longitude,\n      position.coords.latitude,\n    ]);\n\n    this.vectorLayer\n      .getSource()\n      .getFeatureById(FEATURE_ID)\n      .setGeometry(new Point(coords));\n\n    map.getView().animate({\n      center: coords,\n      duration: ANIMATION_DURATION,\n    });\n  };\n\n  render() {\n    const { map, showSpinner, ...rest } = this.props;\n    return (\n      <ButtonControl\n        tooltipPlacement=\"right\"\n        onClick={this.onButtonCLick}\n        {...rest}\n      >\n        <MdMyLocation />\n      </ButtonControl>\n    );\n  }\n}\n\nFullScreenButtonControl.propTypes = {\n  showSpinner: PropTypes.func.isRequired,\n  map: PropTypes.instanceOf(Map).isRequired,\n};\n\nexport default FullScreenButtonControl;\n","import { saveAs } from 'file-saver';\nimport { boundingExtent } from 'ol/extent';\n\nimport { exportMapToPDF, getSortedPointFeatures, getLayerById } from './util';\n\nexport const PDF_OPTION_ALL = 'all';\nexport const PDF_OPTION_CURRENT = 'current';\n\nexport const addGPXToZip = async (source, zip) => {\n  const gpxFileUrl = source.getUrl();\n  const gpxFileResponse = await fetch(gpxFileUrl);\n  const gpxText = await gpxFileResponse.text();\n  const fileName = gpxFileUrl.split('/').pop();\n  zip.file(fileName, gpxText);\n};\n\nexport const addPDFTextToCanvas = (\n  canvas,\n  sortedPoint,\n  sortedPointsFeatures,\n  index\n) => {\n  const context = canvas.getContext('2d');\n\n  context.font = '16px Arial';\n\n  context.fillStyle = 'black';\n  context.shadowColor = 'black';\n  context.shadowBlur = 7;\n  context.lineWidth = 5;\n\n  context.fillText(\n    '© OpenStreetMap contributors © koenverhoeven on Wikiloc ',\n    6,\n    canvas.height - 4\n  );\n\n  context.shadowBlur = 0;\n  context.fillStyle = 'white';\n  context.fillText(\n    '© OpenStreetMap contributors © koenverhoeven on Wikiloc ',\n    5,\n    canvas.height - 5\n  );\n\n  context.shadowBlur = 0;\n  context.fillStyle = 'white';\n  context.fillText(\n    `${sortedPoint.featurePoint.getProperties().name} to ${\n      sortedPointsFeatures[index + 1].featurePoint.getProperties().name\n    }`,\n    5,\n    20\n  );\n};\n\nexport const getMultiStagePDF = (\n  map,\n  format,\n  resolution,\n  stageFeatures,\n  onLoadStart,\n  onLoadEnd\n) =>\n  stageFeatures.slice(0, -1).reduce(async (promise, stageFeature, index) => {\n    let pdf = await promise;\n    onLoadStart();\n\n    const extent = boundingExtent([\n      stageFeature.featurePoint.getGeometry().getCoordinates(),\n      stageFeatures[index + 1].featurePoint.getGeometry().getCoordinates(),\n    ]);\n\n    pdf = await exportMapToPDF(\n      map,\n      format,\n      resolution,\n      false,\n      extent,\n      pdf,\n      canvas => {\n        addPDFTextToCanvas(canvas, stageFeature, stageFeatures, index);\n      }\n    );\n    if (index < stageFeatures.length - 2) {\n      pdf.addPage();\n    }\n    onLoadEnd();\n    return pdf;\n  }, Promise.resolve(null));\n\nexport const getCurrentViewPDF = async (\n  map,\n  format,\n  resolution,\n  sortedPointsFeatures,\n  onLoadStart,\n  onLoadEnd\n) => {\n  onLoadStart();\n  const size = map.getSize();\n  const extent = map.getView().calculateExtent(size);\n  const pdf = await exportMapToPDF(map, format, resolution, false, extent);\n  onLoadEnd();\n  return pdf;\n};\n\nexport const addPDFToZip = async (\n  map,\n  format = 'a4',\n  resolution = 150,\n  option = PDF_OPTION_ALL,\n  zip,\n  onLoadStart,\n  onLoadEnd,\n  fileName = 'map.pdf'\n) => {\n  const vectorLayer = getLayerById(map, 'gpxvectorlayer');\n  const sortedPointsFeatures = getSortedPointFeatures(vectorLayer);\n\n  const pdfArgs = [\n    map,\n    format,\n    resolution,\n    sortedPointsFeatures,\n    onLoadStart,\n    onLoadEnd,\n  ];\n\n  const finalPDF =\n    option === PDF_OPTION_ALL\n      ? await getMultiStagePDF(...pdfArgs)\n      : await getCurrentViewPDF(...pdfArgs);\n\n  zip.file(fileName, finalPDF.output('blob'));\n};\n\nexport const downloadZipFile = async (\n  map,\n  includeGPX,\n  includePDF,\n  pdfFormat,\n  pdfResolution,\n  pdfOption,\n  onLoadStart,\n  onLoadEnd\n) => {\n  onLoadStart();\n\n  const {\n    default: JSZip,\n  } = await import(/* webpackChunkName: \"jszip\" */ 'jszip');\n\n  const vectorLayer = getLayerById(map, 'gpxvectorlayer');\n  const source = vectorLayer.getSource();\n  const size = map.getSize();\n  const initialExtent = map.getView().calculateExtent(size);\n  const gpxFileUrl = source.getUrl();\n  const zipFileName = gpxFileUrl.split('/').pop();\n  const zip = new JSZip();\n  const rootZipDir = zip.folder(zipFileName);\n\n  if (includeGPX) {\n    await addGPXToZip(source, rootZipDir);\n  }\n  if (includePDF) {\n    await addPDFToZip(\n      map,\n      pdfFormat,\n      pdfResolution,\n      pdfOption,\n      rootZipDir,\n      onLoadStart,\n      onLoadEnd\n    );\n  }\n\n  const content = await zip.generateAsync({ type: 'blob' });\n  saveAs(content, `${zipFileName}.zip`);\n  map.setSize(size);\n  map.getView().fit(initialExtent, { size });\n  onLoadEnd();\n};\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { IoMdDownload } from 'react-icons/io';\nimport Map from 'ol/Map';\n\nimport {\n  Col,\n  Form,\n  Alert,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap';\n\nimport ButtonControl from '../ButtonControl/ButtonControl';\n\nimport {\n  downloadZipFile,\n  PDF_OPTION_ALL,\n  PDF_OPTION_CURRENT,\n} from '../../util/downloadUtil';\n\nclass DownloadButtonControl extends Component {\n  state = {\n    modalOpen: false,\n    values: {\n      includeGPX: true,\n      includePDF: true,\n      pdfOption: 'all',\n      pdfFormat: 'a4',\n      pdfResolution: 150,\n    },\n  };\n\n  onButtonCLick = async () => {\n    this.setState({\n      modalOpen: true,\n    });\n  };\n\n  onFieldChange = ({ target }) => {\n    const { name, type, checked, value: targetValue } = target;\n    const value = type === 'checkbox' ? checked : targetValue;\n    this.onChange(name, value);\n  };\n\n  onChange = (name, value) => {\n    this.setState(({ values }) => ({\n      values: {\n        ...values,\n        [name]: value,\n      },\n    }));\n  };\n\n  onDownloadButtonClick = () => {\n    this.setState(\n      {\n        modalOpen: false,\n      },\n      () => this.download()\n    );\n  };\n\n  toggle = () => {\n    this.setState(({ modalOpen }) => ({\n      modalOpen: !modalOpen,\n    }));\n  };\n\n  async download() {\n    const { map, showSpinner } = this.props;\n    const { values } = this.state;\n    const {\n      pdfFormat,\n      pdfResolution,\n      includePDF,\n      includeGPX,\n      pdfOption,\n    } = values;\n    await downloadZipFile(\n      map,\n      includeGPX,\n      includePDF,\n      pdfFormat,\n      pdfResolution,\n      pdfOption,\n      () => showSpinner(true),\n      () => showSpinner(false)\n    );\n  }\n\n  render() {\n    const { modalOpen, values } = this.state;\n    const { map, showSpinner, vectorLayer, ...rest } = this.props;\n    return (\n      <Fragment>\n        <ButtonControl\n          onClick={this.onButtonCLick}\n          tooltipPlacement=\"right\"\n          {...rest}\n        >\n          <IoMdDownload />\n        </ButtonControl>\n        <Modal isOpen={modalOpen} toggle={this.toggle} centered>\n          <ModalHeader toggle={this.toggle}>Download Options</ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      type=\"checkbox\"\n                      name=\"includeGPX\"\n                      checked={values.includeGPX}\n                      onChange={this.onFieldChange}\n                    />{' '}\n                    Include GPX\n                  </Label>\n                </FormGroup>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      type=\"checkbox\"\n                      name=\"includePDF\"\n                      checked={values.includePDF}\n                      onChange={this.onFieldChange}\n                    />{' '}\n                    Include PDF\n                  </Label>\n                </FormGroup>\n                {values.includePDF && (\n                  <FormGroup style={{ paddingLeft: '1.5em' }}>\n                    <FormGroup row>\n                      <Label for=\"pdfFormat\" sm={4}>\n                        Page size\n                      </Label>\n                      <Col sm={8}>\n                        <Input\n                          type=\"select\"\n                          id=\"pdfFormat\"\n                          onChange={this.onFieldChange}\n                          name=\"pdfFormat\"\n                          value={values.pdfFormat}\n                        >\n                          <option value=\"a0\">A0 (slow)</option>\n                          <option value=\"a1\">A1</option>\n                          <option value=\"a2\">A2</option>\n                          <option value=\"a3\">A3</option>\n                          <option value=\"a4\">A4</option>\n                          <option value=\"a5\">A5 (fast)</option>\n                        </Input>\n                      </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                      <Label for=\"pdfFormat\" sm={4}>\n                        Resolution\n                      </Label>\n                      <Col sm={8}>\n                        <Input\n                          type=\"select\"\n                          id=\"pdfResolution\"\n                          onChange={this.onFieldChange}\n                          name=\"pdfResolution\"\n                          value={values.pdfResolution}\n                        >\n                          <option value=\"72\">72 dpi (fast)</option>\n                          <option value=\"150\">150 dpi</option>\n                          <option value=\"300\">300 dpi (slow)</option>\n                        </Input>\n                      </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                      <Label sm={4}>Pages</Label>\n                      <Col sm={8}>\n                        <FormGroup check>\n                          <Label check>\n                            <Input\n                              type=\"radio\"\n                              name=\"pdfOption\"\n                              value={PDF_OPTION_ALL}\n                              checked={values.pdfOption === PDF_OPTION_ALL}\n                              onChange={this.onFieldChange}\n                            />{' '}\n                            All Stages\n                          </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                          <Label check>\n                            <Input\n                              type=\"radio\"\n                              name=\"pdfOption\"\n                              value={PDF_OPTION_CURRENT}\n                              checked={values.pdfOption === PDF_OPTION_CURRENT}\n                              onChange={this.onFieldChange}\n                            />{' '}\n                            Current View\n                          </Label>\n                        </FormGroup>\n                      </Col>\n                    </FormGroup>\n                  </FormGroup>\n                )}\n              </FormGroup>\n              {values.includePDF && values.pdfOption === PDF_OPTION_ALL && (\n                <Alert color=\"warning\">\n                  Please note it might take some time to generate the PDF.\n                </Alert>\n              )}\n\n              <Button\n                onClick={this.onDownloadButtonClick}\n                disabled={!values.includeGPX && !values.includePDF}\n              >\n                Download\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nDownloadButtonControl.propTypes = {\n  showSpinner: PropTypes.func.isRequired,\n  map: PropTypes.instanceOf(Map).isRequired,\n};\n\nexport default DownloadButtonControl;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Map from 'ol/Map';\nimport { MdZoomOutMap } from 'react-icons/md';\n\nimport ButtonControl from '../ButtonControl/ButtonControl';\n\nconst ANIMATION_DURATION = 1000;\n\nclass ZoomToExtentButtonControl extends Component {\n  onButtonCLick = () => {\n    const { map } = this.props;\n    const view = map.getView();\n    view.fit(\n      [\n        978823.488305482,\n        5121096.608475749,\n        1039463.1111227559,\n        5245134.752643153,\n      ],\n      {\n        duration: ANIMATION_DURATION,\n      }\n    );\n  };\n\n  render() {\n    const { map, vectorLayer, ...rest } = this.props;\n    return (\n      <ButtonControl\n        tooltipPlacement=\"right\"\n        onClick={this.onButtonCLick}\n        {...rest}\n      >\n        <MdZoomOutMap />\n      </ButtonControl>\n    );\n  }\n}\n\nZoomToExtentButtonControl.propTypes = {\n  map: PropTypes.instanceOf(Map).isRequired,\n};\n\nexport default ZoomToExtentButtonControl;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaFilePdf } from 'react-icons/fa';\n\nimport Map from 'ol/Map';\n\nimport ButtonControl from '../ButtonControl/ButtonControl';\nimport { exportMapToPDF } from '../../util/util';\n\nclass PdfExportButtonControl extends Component {\n  onButtonCLick = async () => {\n    const { map, showSpinner } = this.props;\n    showSpinner(true);\n    const pdf = await exportMapToPDF(map);\n    pdf.save('map.pdf');\n    showSpinner(false);\n  };\n\n  render() {\n    const { map, showSpinner, vectorLayer, ...rest } = this.props;\n    return (\n      <ButtonControl\n        tooltipPlacement=\"right\"\n        onClick={this.onButtonCLick}\n        {...rest}\n      >\n        <FaFilePdf />\n      </ButtonControl>\n    );\n  }\n}\n\nPdfExportButtonControl.propTypes = {\n  showSpinner: PropTypes.func.isRequired,\n  map: PropTypes.instanceOf(Map).isRequired,\n};\n\nexport default PdfExportButtonControl;\n","import Attribution from 'ol/control/Attribution';\nimport Zoom from 'ol/control/Zoom';\nimport ScaleLine from 'ol/control/ScaleLine';\n\nexport const zoomControl = new Zoom();\n\nexport const attributionControl = new Attribution({\n  collapsible: true,\n});\n\nexport const scaleLineControl = new ScaleLine({\n  units: 'metric',\n  minWidth: 100,\n});\n\nexport default [zoomControl, attributionControl, scaleLineControl];\n","import React, { Component } from 'react';\nimport classNames from 'classnames/bind';\nimport Map from 'ol/Map';\nimport PropTypes from 'prop-types';\nimport { SpinnerContext } from '../Spinner/SpinnerProvider';\nimport { MapContext } from '../Map/Map';\nimport { getLayerById } from '../../util/util';\nimport { OptionsContext } from '../Options/OptionsProvider';\n\n// import FullScreenButtonControl fro../FullScreenButtonControl/FullScreenButtonControlrol';\nimport MyLocationButtonControl from '../MyLocationButtonControl/MyLocationButtonControl';\nimport DownloadButtonControl from '../DownloadButtonControl/DownloadButtonControl';\nimport ZoomToExtentButtonControl from '../ZoomToExtentButtonControl/ZoomToExtentButtonControl';\n// import GetLinkButtonControl from '../GetLinkButtonControl/GetLinkButtonControl';\nimport PdfExportButtonControl from '../PdfExportButtonControl/PdfExportButtonControl';\n\nimport controls, { zoomControl } from './controls';\n\nimport STYLES from './MapControls.module.scss';\n\nconst c = classNames.bind(STYLES);\n\nclass MapControls extends Component {\n  constructor(props) {\n    super(props);\n    this.zoomContainerRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { map } = this.props;\n    zoomControl.setTarget(this.zoomContainerRef.current);\n    controls.forEach(control => map.addControl(control));\n  }\n\n  componentWillUnmount() {\n    const { map } = this.props;\n    controls.forEach(control => map.removeControl(control));\n  }\n\n  tooltipToggle = i => {\n    this.setState(({ openTooltipIndex }) => ({\n      openTooltipIndex: i === openTooltipIndex ? -1 : i,\n    }));\n  };\n\n  render() {\n    const { showSpinner, map } = this.props;\n    const gpxVectorLayer = getLayerById(map, 'gpxvectorlayer');\n    const buttonProps = {\n      map,\n      className: c('MapControls__button-control'),\n    };\n    return (\n      <div className={STYLES.MapControls}>\n        <div ref={this.zoomContainerRef} />\n        <ZoomToExtentButtonControl tooltip=\"Fit Extent\" {...buttonProps} />\n        {/* <FullScreenButtonControl\n          tooltip=\"Toggle full-screen\"\n          {...buttonProps}\n        /> */}\n        <PdfExportButtonControl\n          tooltip=\"Export to PDF\"\n          showSpinner={showSpinner}\n          {...buttonProps}\n        />\n        <DownloadButtonControl\n          tooltip=\"Download Route and Maps\"\n          vectorLayer={gpxVectorLayer}\n          showSpinner={showSpinner}\n          {...buttonProps}\n        />\n        {/* <GetLinkButtonControl tooltip=\"Get Shareable Link\" {...buttonProps} /> */}\n        <MyLocationButtonControl\n          tooltip=\"Show My Location\"\n          showSpinner={showSpinner}\n          {...buttonProps}\n        />\n        {/* <ControlIcon target={rotateNorthButton}>\n          <MdRotateLeft />\n        </ControlIcon> */}\n      </div>\n    );\n  }\n}\n\nMapControls.propTypes = {\n  map: PropTypes.instanceOf(Map).isRequired,\n  showSpinner: PropTypes.func.isRequired,\n};\n\nexport default props => (\n  <OptionsContext.Consumer>\n    {({ values }) => {\n      const { showControls } = values;\n      return (\n        <MapContext.Consumer>\n          {({ map }) => (\n            <SpinnerContext.Consumer>\n              {({ toggle: showSpinner }) =>\n                showControls ? (\n                  <MapControls showSpinner={showSpinner} map={map} {...props} />\n                ) : null\n              }\n            </SpinnerContext.Consumer>\n          )}\n        </MapContext.Consumer>\n      );\n    }}\n  </OptionsContext.Consumer>\n);\n","import React from 'react';\nimport { FaTimes } from 'react-icons/fa';\n\nimport ButtonControl from '../ButtonControl/ButtonControl';\nimport STYLES from '../ButtonControl/ButtonControl.module.scss';\n\nconst CloseButtonControl = props => (\n  <ButtonControl\n    className={STYLES.ButtonControl__close}\n    buttonClassName={STYLES['ButtonControl__close-button']}\n    {...props}\n  >\n    <FaTimes />\n  </ButtonControl>\n);\n\nexport default CloseButtonControl;\n","import React from 'react';\n\nimport { MdZoomIn } from 'react-icons/md';\n\nimport ButtonControl from '../ButtonControl/ButtonControl';\n\nconst ZoomInButtonControl = props => (\n  <ButtonControl {...props}>\n    <MdZoomIn />\n  </ButtonControl>\n);\n\nexport default ZoomInButtonControl;\n","import React from 'react';\nimport { FaCaretLeft } from 'react-icons/fa';\n\nimport ButtonControl from '../ButtonControl/ButtonControl';\n\nconst PrevPointButtonControl = props => (\n  <ButtonControl {...props}>\n    <FaCaretLeft />\n  </ButtonControl>\n);\n\nexport default PrevPointButtonControl;\n","import React from 'react';\nimport { FaCaretRight } from 'react-icons/fa';\n\nimport ButtonControl from '../ButtonControl/ButtonControl';\n\nconst PrevPointButtonControl = props => (\n  <ButtonControl {...props}>\n    <FaCaretRight />\n  </ButtonControl>\n);\n\nexport default PrevPointButtonControl;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M12 7C6.48 7 2 9.24 2 12c0 2.24 2.94 4.13 7 4.77V20l4-4-4-4v2.73c-3.15-.56-5-1.9-5-2.73 0-1.06 3.04-3 8-3s8 1.94 8 3c0 .73-1.46 1.89-4 2.53v2.05c3.53-.77 6-2.53 6-4.58 0-2.76-4.48-5-10-5z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n});\n\nvar Svg36024px = function Svg36024px(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    width: \"1.2em\",\n    height: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(Svg36024px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/360-24px.c407718c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nimport { ReactComponent as Icon360 } from './360-24px.svg';\n\nimport ButtonControl from '../ButtonControl/ButtonControl';\n\nclass Google360ButtonControl extends Component {\n  state = {\n    modalOpen: false,\n  };\n\n  toggle = () => {\n    this.setState(({ modalOpen }) => ({\n      modalOpen: !modalOpen,\n    }));\n  };\n\n  render() {\n    const { pointName, embedUrl, ...rest } = this.props;\n    const { modalOpen } = this.state;\n    return (\n      <Fragment>\n        <ButtonControl {...rest} onClick={this.toggle}>\n          <Icon360 />\n        </ButtonControl>\n        <Modal\n          isOpen={modalOpen}\n          toggle={this.toggle}\n          centered\n          style={{ maxWidth: '800px' }}\n        >\n          <ModalHeader toggle={this.toggle}>{pointName} 360</ModalHeader>\n          <ModalBody>\n            <iframe\n              title=\"Google Maps 360\"\n              src={embedUrl}\n              width=\"100%\"\n              height=\"450\"\n              frameBorder=\"0\"\n              style={{ border: 0 }}\n              allowFullScreen\n            />\n          </ModalBody>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nGoogle360ButtonControl.propTypes = {\n  pointName: PropTypes.string.isRequired,\n  embedUrl: PropTypes.string.isRequired,\n};\n\nexport default Google360ButtonControl;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport { Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport Map from 'ol/Map';\nimport Overlay from 'ol/Overlay';\nimport { fromLonLat } from 'ol/proj';\nimport { easeOut } from 'ol/easing';\nimport GeometryType from 'ol/geom/GeometryType';\nimport EventType from 'ol/events/EventType';\nimport MapBrowserEventType from 'ol/MapBrowserEventType';\n\nimport { MdHome } from 'react-icons/md';\n\nimport CloseButtonControl from './CloseButtonControl';\nimport ZoomInButtonControl from './ZoomInButtonControl';\nimport PrevPointButtonControl from './PrevPointButtonControl';\nimport NextPointButtonControl from './NextPointButtonControl';\nimport Google360ButtonControl from './Google360ButtonControl';\n\nimport {\n  getLayerById,\n  getSortedPointFeatures,\n  getDataFromCoords,\n  getDataFromPointFeature,\n} from '../../util/util';\n\nimport { MapContext } from '../Map/Map';\nimport { OptionsContext } from '../Options/OptionsProvider';\n\nimport STYLES from './Popup.module.scss';\n\nconst c = classNames.bind(STYLES);\nconst { MULTI_LINE_STRING } = GeometryType;\n\nconst ANIMATION_DURATION = 800;\n\nconst pointSelectEvents = [\n  EventType.MOUSEDOWN,\n  EventType.TOUCHSTART,\n  EventType.MSPOINTERDOWN,\n  MapBrowserEventType.POINTERDOWN,\n];\n\nclass Popup extends Component {\n  state = {\n    isOpen: false,\n    elevation: null,\n    hdms: null,\n    name: null,\n    lonLat: [],\n    sortedPointFeatures: [],\n    sortedPoint: null,\n    distanceInKm: null,\n    elevationGainUp: null,\n    elevationGainDown: null,\n    modifiers: {\n      hide: { enabled: false },\n      preventOverflow: { enabled: false },\n      flip: { enabled: false },\n    },\n  };\n\n  containerRef = React.createRef();\n\n  componentDidMount() {\n    const { map } = this.props;\n\n    this.overlay = new Overlay({\n      element: this.containerRef.current,\n      autoPan: false,\n      autoPanAnimation: {\n        duration: 250,\n      },\n      stopEvent: true,\n      insertFirst: false,\n    });\n\n    map.addOverlay(this.overlay);\n    pointSelectEvents.forEach(eventType => map.on(eventType, this.onMapClick));\n    this.setSortedPoints();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { gpxUrl } = this.props;\n    if (prevProps.gpxUrl !== gpxUrl) {\n      this.setSortedPoints();\n    }\n  }\n\n  componentWillUnmount() {\n    const { map } = this.props;\n    pointSelectEvents.forEach(eventType => map.un(eventType, this.onMapClick));\n  }\n\n  setSortedPoints() {\n    const { map } = this.props;\n    const gpxVectorLayer = getLayerById(map, 'gpxvectorlayer');\n    gpxVectorLayer.getSource().once('change', () => {\n      const sortedPointFeatures = getSortedPointFeatures(gpxVectorLayer);\n      this.setState({\n        sortedPointFeatures,\n      });\n    });\n  }\n\n  onMapClick = evt => {\n    const { map } = this.props;\n    const features = map.getFeaturesAtPixel(evt.pixel, { hitTolerance: 4 });\n    if (features && features.length) {\n      const feature = features[0];\n      this.openPopup(evt, feature);\n    } else if (evt.originalEvent.target.nodeName.toLowerCase() === 'canvas') {\n      this.setState({\n        isOpen: false,\n      });\n    }\n  };\n\n  onCloseButtonClick = () => {\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  onNextPointButtonClick = () => {\n    const { sortedPointFeatures, sortedPoint } = this.state;\n    const sortedPointFeatureIndex = sortedPointFeatures.indexOf(sortedPoint);\n    const nextPoint = sortedPointFeatures[sortedPointFeatureIndex + 1];\n    this.openPopup(null, nextPoint.featurePoint);\n  };\n\n  onPrevPointButtonClick = () => {\n    const { sortedPointFeatures, sortedPoint } = this.state;\n    const sortedPointFeatureIndex = sortedPointFeatures.indexOf(sortedPoint);\n    const prevPoint = sortedPointFeatures[sortedPointFeatureIndex - 1];\n    this.openPopup(null, prevPoint.featurePoint);\n  };\n\n  onZoomInButtonClick = () => {\n    const { lonLat } = this.state;\n    const { map } = this.props;\n    map.getView().animate({\n      center: fromLonLat(lonLat),\n      zoom: 18,\n      duration: ANIMATION_DURATION,\n      easing: easeOut,\n    });\n  };\n\n  openPopup(evt, feature) {\n    const { sortedPointFeatures } = this.state;\n    const { map } = this.props;\n    const gpxVectorLayer = getLayerById(map, 'gpxvectorlayer');\n    const { name, google360Url } = feature.getProperties();\n\n    const coordinates =\n      feature.getGeometry().getType() === MULTI_LINE_STRING\n        ? evt.coordinate\n        : feature.getGeometry().getCoordinates();\n\n    const nextState = {\n      name,\n      google360Url,\n      isOpen: true,\n      distanceInKm: null,\n      sortedPoint: null,\n      elevationGainUp: null,\n      elevationGainDown: null,\n      ...getDataFromCoords(coordinates),\n    };\n\n    if (feature.getId() !== 'startPoint' && feature.getId() !== 'finishPoint') {\n      Object.assign(\n        nextState,\n        getDataFromPointFeature(feature, gpxVectorLayer, sortedPointFeatures)\n      );\n    }\n\n    this.setState(nextState, () => {\n      this.overlay.setPosition(coordinates);\n      setTimeout(() =>\n        map.getView().animate({\n          center: coordinates,\n          duration: ANIMATION_DURATION,\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      elevation,\n      hdms,\n      name,\n      google360Url,\n      isOpen,\n      lonLat,\n      distanceInKm,\n      elevationGainUp,\n      elevationGainDown,\n      sortedPointFeatures,\n      sortedPoint,\n      modifiers,\n    } = this.state;\n    const lon = (lonLat[0] || 0).toFixed(6);\n    const lat = (lonLat[1] || 0).toFixed(6);\n    const sortedPointFeatureIndex = sortedPointFeatures.indexOf(sortedPoint);\n    const isPointFeature = sortedPointFeatureIndex !== -1;\n    const hasNextPoint =\n      isPointFeature &&\n      sortedPointFeatureIndex < sortedPointFeatures.length - 1;\n    const buttonProps = {\n      className: c('Popup__button-control'),\n    };\n    return (\n      <div ref={this.containerRef}>\n        <Popover\n          placement=\"top\"\n          isOpen={isOpen}\n          target={() => this.containerRef.current}\n          container={() => this.containerRef.current}\n          toggle={this.toggle}\n          className={c('Popup')}\n          modifiers={modifiers}\n        >\n          <PopoverHeader>\n            <CloseButtonControl onClick={this.onCloseButtonClick} />\n            <MdHome size={20} style={{ verticalAlign: 'top' }} /> {name}\n          </PopoverHeader>\n          <PopoverBody>\n            <div>Elevation: {elevation}m</div>\n            <div>Longitude: {lon}</div>\n            <div>Latitdue: {lat}</div>\n            <div>Coordinates: {hdms}</div>\n            {hasNextPoint && (\n              <Fragment>\n                <strong>Next Point</strong>\n                {distanceInKm && <div>Distance: {distanceInKm}km</div>}\n                {elevationGainUp && (\n                  <div>Elevation gain: {elevationGainUp}m</div>\n                )}\n                {elevationGainDown && (\n                  <div>Elevation loss: {elevationGainDown}m</div>\n                )}\n              </Fragment>\n            )}\n            <div style={{ paddingTop: '0.5rem' }}>\n              <ZoomInButtonControl\n                onClick={this.onZoomInButtonClick}\n                tooltip=\"Zoom to Point\"\n                {...buttonProps}\n              />\n              {sortedPointFeatureIndex > 0 && (\n                <PrevPointButtonControl\n                  onClick={this.onPrevPointButtonClick}\n                  tooltip=\"Previous Point\"\n                  {...buttonProps}\n                />\n              )}\n              {hasNextPoint && (\n                <NextPointButtonControl\n                  onClick={this.onNextPointButtonClick}\n                  tooltip=\"Next Point\"\n                  {...buttonProps}\n                />\n              )}\n              {google360Url && (\n                <Google360ButtonControl\n                  tooltip=\"View 360\"\n                  pointName={name}\n                  embedUrl={google360Url}\n                  {...buttonProps}\n                />\n              )}\n            </div>\n          </PopoverBody>\n        </Popover>\n      </div>\n    );\n  }\n}\n\nPopup.propTypes = {\n  map: PropTypes.instanceOf(Map).isRequired,\n  gpxUrl: PropTypes.string.isRequired,\n};\n\nexport default props => (\n  <OptionsContext.Consumer>\n    {({ values }) => {\n      const { gpxUrl } = values;\n      return (\n        <MapContext.Consumer>\n          {({ map }) => <Popup map={map} gpxUrl={gpxUrl} {...props} />}\n        </MapContext.Consumer>\n      );\n    }}\n  </OptionsContext.Consumer>\n);\n","import Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\n\nexport default {\n  Point: new Style({\n    image: new Circle({\n      fill: new Fill({\n        color: 'yellow',\n      }),\n      stroke: new Stroke({ color: 'rgba(0,60,136)', width: 1 }),\n      radius: 5,\n    }),\n  }),\n  MultiLineString: new Style({\n    stroke: new Stroke({\n      color: 'rgba(0,60,136)',\n      width: 4,\n    }),\n  }),\n};\n","import React, { Component } from 'react';\nimport Map from 'ol/Map';\nimport PropTypes from 'prop-types';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport VectorSource from 'ol/source/Vector';\nimport STATE from 'ol/source/State';\n\nimport GPX from 'ol/format/GPX';\nimport { MapContext } from '../Map/Map';\nimport { OptionsContext } from '../Options/OptionsProvider';\nimport { SpinnerContext } from '../Spinner/SpinnerProvider';\n\nimport { getMultiLineStringFeature, getPointFeatures } from '../../util/util';\n\nimport STYLES from './styles';\n\nconst EXTENSIONS_TAG_NAME = 'gr20';\n\nclass GpxLayer extends Component {\n  state = {\n    gpxMarkers: [],\n    multiLineFeature: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.vectorLayer = new VectorLayer();\n    this.vectorLayer.set('id', 'gpxvectorlayer');\n    this.vectorLayer.setStyle(\n      feature => STYLES[feature.getGeometry().getType()]\n    );\n  }\n\n  componentDidMount() {\n    const { map } = this.props;\n    map.addLayer(this.vectorLayer);\n    this.setSource();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { gpxUrl, showMarkers, showRoute } = this.props;\n    if (prevProps.gpxUrl !== gpxUrl) {\n      this.setSource();\n    }\n    if (prevProps.showMarkers !== showMarkers) {\n      this.toggleMarkers(showMarkers);\n    }\n    if (prevProps.showRoute !== showRoute) {\n      this.toggleRoute(showRoute);\n    }\n  }\n\n  setSource() {\n    const { gpxUrl, onSourceLoadStart, onSourceLoadEnd } = this.props;\n    onSourceLoadStart();\n    const format = new GPX({\n      readExtensions(feature, extensionsNode) {\n        if (!extensionsNode) {\n          return;\n        }\n        const gr20Nodes = [\n          ...extensionsNode.getElementsByTagName(EXTENSIONS_TAG_NAME),\n        ];\n        gr20Nodes.forEach(node => {\n          const name = node.getAttribute('name');\n          const text = node.textContent;\n          feature.setProperties({\n            [name]: text,\n          });\n        });\n      },\n    });\n    const source = new VectorSource({\n      url: gpxUrl,\n      format,\n    });\n    this.vectorLayer.setSource(source);\n    source.once('change', evt => {\n      if (source.getState() === STATE.READY) {\n        onSourceLoadEnd();\n      }\n    });\n  }\n\n  toggleMarkers(show) {\n    const source = this.vectorLayer.getSource();\n    if (show) {\n      const { gpxMarkers } = this.state;\n      gpxMarkers.forEach(markerPoint => source.addFeature(markerPoint));\n    } else {\n      const gpxMarkers = getPointFeatures(source.getFeatures());\n      this.setState({\n        gpxMarkers,\n      });\n      gpxMarkers.forEach(markerPoint => source.removeFeature(markerPoint));\n    }\n  }\n\n  toggleRoute(show) {\n    if (show) {\n      const { multiLineFeature } = this.state;\n      this.vectorLayer.getSource().addFeature(multiLineFeature);\n    } else {\n      const multiLineFeature = getMultiLineStringFeature(\n        this.vectorLayer.getSource().getFeatures()\n      );\n      this.setState({\n        multiLineFeature,\n      });\n      this.vectorLayer.getSource().removeFeature(multiLineFeature);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nGpxLayer.propTypes = {\n  map: PropTypes.instanceOf(Map).isRequired,\n  gpxUrl: PropTypes.string.isRequired,\n  showMarkers: PropTypes.bool.isRequired,\n  showRoute: PropTypes.bool.isRequired,\n  onSourceLoadStart: PropTypes.func.isRequired,\n  onSourceLoadEnd: PropTypes.func.isRequired,\n};\n\nexport default props => (\n  <SpinnerContext.Consumer>\n    {({ toggle: showSpinner }) => (\n      <OptionsContext.Consumer>\n        {({ values }) => {\n          const { showMarkers, showRoute, gpxUrl } = values;\n          return (\n            <MapContext.Consumer>\n              {({ map }) => (\n                <GpxLayer\n                  map={map}\n                  gpxUrl={gpxUrl}\n                  showRoute={showRoute}\n                  showMarkers={showMarkers}\n                  onSourceLoadStart={() => showSpinner(true)}\n                  onSourceLoadEnd={() => showSpinner(false)}\n                  {...props}\n                />\n              )}\n            </MapContext.Consumer>\n          );\n        }}\n      </OptionsContext.Consumer>\n    )}\n  </SpinnerContext.Consumer>\n);\n","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Map from 'ol/Map';\nimport PropTypes from 'prop-types';\nimport 'core-js/features/array/flat';\nimport OSM from 'ol/source/OSM';\nimport Tile from 'ol/layer/Tile';\nimport { expandUrl } from 'ol/tileurlfunction';\nimport { MapContext } from '../Map/Map';\nimport { OptionsContext } from '../Options/OptionsProvider';\n\nimport maps from '../../data/maps/maps';\n\nconst urls = maps.map(({ url }) => expandUrl(url)).flat();\n\nclass TileLayer extends Component {\n  constructor(props) {\n    super(props);\n    this.xyzSource = new OSM();\n    this.rasterLayer = new Tile({\n      source: this.xyzSource,\n    });\n    this.rasterLayer.set('id', 'osmtilelayer');\n  }\n\n  componentDidMount() {\n    const { map, mapUrl } = this.props;\n    map.addLayer(this.rasterLayer);\n    this.xyzSource.setUrl(mapUrl);\n  }\n\n  componentDidUpdate() {\n    const { mapUrl } = this.props;\n    this.xyzSource.setUrl(mapUrl);\n  }\n\n  componentWillUnmount() {\n    const { map } = this.props;\n    map.removeLayer(this.rasterLayer);\n  }\n\n  render() {\n    return (\n      <Helmet>\n        {urls.map(url => (\n          <link key={url} href={new URL(url).origin} rel=\"preconnect\" />\n        ))}\n      </Helmet>\n    );\n  }\n}\n\nTileLayer.propTypes = {\n  map: PropTypes.instanceOf(Map).isRequired,\n  mapUrl: PropTypes.string.isRequired,\n};\n\nexport default props => (\n  <OptionsContext.Consumer>\n    {({ values }) => {\n      const { mapUrl } = values;\n      return (\n        <MapContext.Consumer>\n          {({ map }) => <TileLayer map={map} mapUrl={mapUrl} {...props} />}\n        </MapContext.Consumer>\n      );\n    }}\n  </OptionsContext.Consumer>\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Map from 'ol/Map';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport VectorSource from 'ol/source/Vector';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\nimport Text from 'ol/style/Text';\nimport Icon from 'ol/style/Icon';\nimport Point from 'ol/geom/Point';\nimport Feature from 'ol/Feature';\nimport STATE from 'ol/source/State';\n\nimport { MapContext } from '../Map/Map';\nimport { OptionsContext } from '../Options/OptionsProvider';\nimport { getLayerById, getMultiLineStringFeature } from '../../util/util';\n\nimport yellowMarker from './baseline-location_on-24px-yellow.svg';\n\nconst pointTextStyle = (text, marker, color) =>\n  new Style({\n    image: new Icon({\n      anchor: [0.5, 1],\n      src: marker,\n    }),\n    text: new Text({\n      text,\n      fill: new Fill({ color }),\n      stroke: new Stroke({ color: '#ffffff', width: 2 }),\n      font: 'bold 13px Arial',\n      offsetY: 12,\n    }),\n  });\n\nconst createPointTextFeature = (name, id, color, marker) => {\n  const feature = new Feature({\n    name,\n  });\n  feature.setId(id);\n  feature.setStyle(pointTextStyle(name, marker, color));\n  return feature;\n};\n\nclass StartEndLayer extends Component {\n  constructor(props) {\n    super(props);\n    this.vectorLayer = new VectorLayer();\n  }\n\n  componentDidMount() {\n    const { map } = this.props;\n    map.addLayer(this.vectorLayer);\n    this.setLayerSource();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { showMarkers, gpxUrl } = this.props;\n    if (prevProps.showMarkers !== showMarkers) {\n      this.showMarkers(showMarkers);\n    }\n    if (prevProps.gpxUrl !== gpxUrl) {\n      this.setLayerSource();\n    }\n  }\n\n  setLayerSource() {\n    const { map } = this.props;\n    this.showMarkers(false);\n    const gpxVectorLayer = getLayerById(map, 'gpxvectorlayer');\n\n    const source = new VectorSource();\n    source.addFeature(\n      createPointTextFeature(\n        'Start',\n        'startPoint',\n        'rgba(0,60,136)',\n        yellowMarker\n      )\n    );\n    source.addFeature(\n      createPointTextFeature(\n        'Finish',\n        'finishPoint',\n        'rgba(0,60,136)',\n        yellowMarker\n      )\n    );\n    this.vectorLayer.setSource(source);\n\n    gpxVectorLayer.getSource().once('change', evt => {\n      if (gpxVectorLayer.getSource().getState() === STATE.READY) {\n        const multiLineStringGeometry = getMultiLineStringFeature(\n          gpxVectorLayer.getSource().getFeatures()\n        ).getGeometry();\n        source\n          .getFeatureById('startPoint')\n          .setGeometry(new Point(multiLineStringGeometry.getFirstCoordinate()));\n        source\n          .getFeatureById('finishPoint')\n          .setGeometry(new Point(multiLineStringGeometry.getLastCoordinate()));\n        this.showMarkers(true);\n      }\n    });\n  }\n\n  showMarkers(show) {\n    this.vectorLayer.setVisible(show);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nStartEndLayer.propTypes = {\n  map: PropTypes.instanceOf(Map).isRequired,\n  showMarkers: PropTypes.bool.isRequired,\n  gpxUrl: PropTypes.string.isRequired,\n};\n\nexport default props => (\n  <OptionsContext.Consumer>\n    {({ values }) => {\n      const { showMarkers, gpxUrl } = values;\n      return (\n        <MapContext.Consumer>\n          {({ map }) => (\n            <StartEndLayer\n              map={map}\n              showMarkers={showMarkers}\n              gpxUrl={gpxUrl}\n              {...props}\n            />\n          )}\n        </MapContext.Consumer>\n      );\n    }}\n  </OptionsContext.Consumer>\n);\n","import React, { Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport DropdownGroup from '../DropdownGroup/DropdownGroup';\nimport Map from '../Map/Map';\nimport maps from '../../data/maps/maps';\nimport routes from '../../data/routes/routes';\nimport SpinnerProvider from '../Spinner/SpinnerProvider';\nimport Spinner from '../Spinner/Spinner';\nimport OptionsProvider from '../Options/OptionsProvider';\n\nimport MapControls from '../MapControls/MapControls';\n// import ElevationProfile from '../ElevationProfile/ElevationProfile';\nimport Popup from '../Popup/Popup';\nimport GpxLayer from '../GpxLayer/GpxLayer';\nimport TileLayer from '../TileLayer/TileLayer';\nimport StartEndLayer from '../StartEndLayer/StartEndLayer';\n\nimport STYLES from './MapPage.module.scss';\n\nconst initialOptions = {\n  mapUrl: maps[0].url,\n  gpxUrl: routes[0].url,\n};\n\nconst MapPage = props => (\n  <Fragment>\n    <Helmet>\n      <title>GR-20 - The Route</title>\n    </Helmet>\n    <div className={STYLES.MapPage}>\n      <SpinnerProvider>\n        <OptionsProvider values={initialOptions}>\n          <Spinner />\n          <DropdownGroup />\n          <Map>\n            <TileLayer />\n            <GpxLayer />\n            <Popup />\n            <StartEndLayer />\n            <MapControls />\n            {/* <ElevationProfile /> */}\n          </Map>\n        </OptionsProvider>\n      </SpinnerProvider>\n    </div>\n  </Fragment>\n);\n\nexport default MapPage;\n","import React, { Fragment } from 'react';\nimport { IoMdArrowRoundForward } from 'react-icons/io';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport STYLES from './IndexPage.module.scss';\n\nimport cover from './cover.jpg';\n\nconst IndexPage = props => (\n  <Fragment>\n    <Helmet>\n      <title>GR-20</title>\n    </Helmet>\n    <div\n      className={STYLES.IndexPage__cover}\n      style={{ backgroundImage: `url(\"${cover}\")` }}\n    >\n      <a href=\"https://github.com/badsyntax/gr-20\">\n        <img\n          style={{ position: 'absolute', top: 0, left: 0 }}\n          src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png\"\n          alt=\"Fork me on GitHub\"\n        />\n      </a>\n      <div className={STYLES['IndexPage__cover-overlay']}>\n        <div className=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column\">\n          <header className=\"masthead mb-auto\" />\n\n          <main role=\"main\" className=\"inner cover\">\n            <h1 className=\"cover-heading\">GR-20</h1>\n            <p className=\"lead\" style={{ textShadow: '2px 2px 1px #000' }}>\n              The GR 20 is a GR footpath that crosses the Mediterranean island\n              of Corsica running approximately north-south, described by the\n              outdoor writer Paddy Dillon as \"one of the top trails in the\n              world\".\n            </p>\n            <p className=\"lead\">\n              <Link to=\"/map/\" className=\"btn btn-lg btn-primary\">\n                View Routes <IoMdArrowRoundForward />\n              </Link>{' '}\n              <Link to=\"/kit/\" className=\"btn btn-lg btn-primary\">\n                View Kit <IoMdArrowRoundForward />\n              </Link>{' '}\n              <Link to=\"/about/\" className=\"btn btn-lg btn-primary\">\n                About <IoMdArrowRoundForward />\n              </Link>\n            </p>\n          </main>\n\n          <footer className=\"mastfoot mt-auto\">\n            <div className=\"inner\">\n              {/* <p>\n                Cover photo by <a href=\"#\">Richard Willis</a>\n                {/* for{' '} */}\n              {/* <a href=\"https://getbootstrap.com/\">Bootstrap</a>, by{' '} */}\n              {/* <a href=\"https://twitter.com/mdo\">@mdo</a>. */}\n              {/* </p> */}\n            </div>\n          </footer>\n        </div>\n      </div>\n    </div>\n  </Fragment>\n);\nexport default IndexPage;\n","import React, { Component, Fragment } from 'react';\nimport classNames from 'classnames/bind';\nimport { Helmet } from 'react-helmet';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport STYLES from './AboutPage.module.scss';\n\nconst c = classNames.bind(STYLES);\n\nclass AboutPage extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = () => {\n    this.setState(({ isOpen }) => ({\n      isOpen: !isOpen,\n    }));\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    return (\n      <Fragment>\n        <Helmet>\n          <title>GR-20 - About</title>\n        </Helmet>\n        <div className={c('AboutPage')}>\n          <Navbar color=\"dark\" dark expand=\"sm\">\n            <div className=\"container\">\n              <NavbarBrand tag={Link} to=\"/\" title=\"Home\">\n                GR-20\n              </NavbarBrand>\n              <NavbarToggler onClick={this.toggle} />\n              <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem>\n                    <NavLink tag={Link} to=\"/map/\">\n                      Routes\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink tag={Link} to=\"/kit/\">\n                      Kit\n                    </NavLink>\n                  </NavItem>\n                  <NavItem active>\n                    <NavLink tag={Link} to=\"/about/\">\n                      About\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Collapse>\n            </div>\n          </Navbar>\n          <div className=\"container\">\n            <div className=\"mt-3\">\n              <h1>About this GR-20 site</h1>\n            </div>\n            <p className=\"lead\">\n              This is a hobby fan site made for the GR-20 route in Corsica,\n              France. The intention is to provide useful resources to help{' '}\n              <a href=\"https://github.com/badsyntax\">me</a> and you plan and\n              explore the route/s and island.\n            </p>\n            <div className=\"mt-3\">\n              <h2>Goals</h2>\n            </div>\n            <p>\n              Here are some high-level goals I'd like to achieve with this site,\n              in no particular order:\n            </p>\n            <ul>\n              <li>\n                0 maintenance overhead - I want to be able to step away from\n                this project at any point.\n                <ul>\n                  <li>\n                    No reliance on any custom server-side tech for runtime.\n                    Purely front-end application that calls remote API's.\n                  </li>\n                  <li>\n                    No fees to pay (hosted on a free service, like GitHub pages)\n                  </li>\n                </ul>\n              </li>\n              <li>\n                Use and share open data. Not-for profit. Open-source. All for\n                passion of the route.\n              </li>\n              <li>\n                Collaborative effort.\n                <ul>\n                  <li>\n                    I need help with the GPS data. I would like to have GPX\n                    routes for the variants and other routes on the island. I\n                    plan to record more data when I do the route again in June\n                    2019 but if anyone wants to submit their GPS data it would\n                    super useful!\n                  </li>\n                  <li>\n                    If you'd like to contribute, you can so via GitHub. Just{' '}\n                    <a href=\"https://github.com/badsyntax/gr-20/issues\">\n                      create an issue{' '}\n                    </a>{' '}\n                    to get a conversation going. If you don't have an account\n                    you'll need to sign-up but it's free.\n                  </li>\n                </ul>\n              </li>\n            </ul>\n            <div className=\"mt-3\">\n              <h2>Tech used</h2>\n            </div>\n            <ul>\n              <li>OpenLayers V5</li>\n              <li>OpenStreetMap</li>\n              <li>React</li>\n              <li>Bootstrap</li>\n            </ul>\n            <div className=\"mt-3\">\n              <h2>Other Resources</h2>\n              <ul>\n                <li>\n                  <a href=\"http://corsica.forhikers.com/forum/gr-20\">\n                    http://corsica.forhikers.com/forum/gr-20\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://gr20corsica.wordpress.com/about/\">\n                    https://gr20corsica.wordpress.com/about/\n                  </a>\n                </li>\n                <li>\n                  <a href=\"http://www.le-gr20.fr/en/\">\n                    http://www.le-gr20.fr/en/\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://www.cicerone.co.uk/the-gr20-corsica\">\n                    https://www.cicerone.co.uk/the-gr20-corsica\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\nexport default AboutPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport STYLES from './NotFoundPage.module.scss';\n\nconst NotFoundPage = props => (\n  <div className={STYLES.NotFoundPage}>\n    <Helmet>\n      <title>404 Not Found</title>\n    </Helmet>\n    <h1>Not Found</h1>\n    <Link to=\"/\">Go Home &raquo;</Link>\n  </div>\n);\nexport default NotFoundPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport MapPage from '../MapPage/MapPage';\nimport IndexPage from '../IndexPage/IndexPage';\nimport AboutPage from '../AboutPage/AboutPage';\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\nimport './App.css';\n\nconst App = props => (\n  <div className=\"App\">\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\" exact component={IndexPage} />\n        <Route path=\"/map/\" exact component={MapPage} />\n        <Route path=\"/about/\" exact component={AboutPage} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </Router>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\n\nimport './index.scss';\nimport App from './components/App/App';\n\nwindow.snapSaveState = () => {\n  // Remove all elements created by OpenLayers. This is DOM not managed by React, so\n  // React cannot hydrate it.\n  document\n    .querySelectorAll('[class^=\"ol\"],canvas')\n    .forEach(element => element.parentNode.removeChild(element));\n};\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonControl\":\"ButtonControl_ButtonControl__35HXK\",\"ButtonControl__container\":\"ButtonControl_ButtonControl__container__2fRV0\",\"ButtonControl__close\":\"ButtonControl_ButtonControl__close__1WsOk\",\"ButtonControl__close-button\":\"ButtonControl_ButtonControl__close-button__3a1iI\"};"],"sourceRoot":""}